<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Naoki Sekiguchi &#8211; Like@Lunatic</title>
	<atom:link href="/author/seckie/feed" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Naoki Sekiguchi&#039;s personal Web site.</description>
	<lastBuildDate>Wed, 01 Jan 2025 10:11:38 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.5</generator>

<image>
	<url>/wp-content/uploads/2021/01/cropped-og-32x32.png</url>
	<title>Naoki Sekiguchi &#8211; Like@Lunatic</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>2021年振り返りと、マイカーを買った感想</title>
		<link>/2022/01/mycar-review</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sat, 01 Jan 2022 14:25:02 +0000</pubDate>
				<category><![CDATA[Miscellany]]></category>
		<category><![CDATA[Car]]></category>
		<category><![CDATA[Misc]]></category>
		<guid isPermaLink="false">/?p=1485</guid>

					<description><![CDATA[明けましておめでとうございます。 前回のブログポストから一年程度空いて、早くも年が明けてしまいました。遅ればせながら去年あったことを振り返ってみます。 緊急事態宣言下が長かった2021年、ほぼオフィスにはいかずリモートワークで自宅に引きこもっていて、対面で人に会うことがほぼなく、社会との接点が希薄になっていたと思います。 そんな中で生活を最適化すべく、自宅の生活が快適になるように行動した一年と言って良いです。大きなところでは6月に引越しをして、9月にはマイカーを手に入れました。 公共交通機関で移動することが大きく減ったので、駅に近いことはそこまでメリットにならない現状があり、逆に駅から遠くても駐車場付きの広い家に住み、クルマを買った方が行動範囲が広がるのではないかと考えました。また、2020年から飼い始めた愛犬（ミニチュア・シュナウザー♂）と出かけるために、マイカーがあると便利なこともあります。こうした考えから、生活をシフトしてみました。 家族と相談してSUVを買うことは決めていて、 候補になっていたのは SUBARU FORESTER, TOYOTA RAV4, HONDA VEZEL の3つでした。検討の結果、FORESTERを購入したわけですが、そこに至るまでにはネットで情報収集するだけでなく、自動車ディーラーにも行きました。老舗の自動車ディーラーで高価な買い物をするのは初めての体験でしたが、実物を見たり触れたりできるし、カタログや資料はいろいろと見ることができるし、営業さんが様々な情報を教えてくれるし…と、なかなか面白かったです。 あとは比較検討した各社（というより各営業所？各担当者？）の違いが感じられたのも面白い体験でした。 とある担当者はとても事務的であっさりした対応でした。こちらが買ってくれるような客にとても見えなかったのかもしれません。 またとある担当者はニコニコと愛想が良い割に製品知識がなく、上司がほとんど製品の説明をフォローしていました。その担当者の付き添いで試乗もしましたが、操作や機能の説明などを全然してくれないのでどんな機能があったのかはよくわからなかったです。悲しい…。 またとある担当者は製品知識に豊富で、試乗のときにもよく機能について説明してくれたり、ちゃんと売る気満々で、他社との検討状況や、こちらの予算を考慮してくれたりと懇切丁寧に接客してくれました。 というわけで、その懇切丁寧な対応をしてくれた営業担当者さんのお店で買うことに決めたのですが、その方のおかげでよくクルマへの理解が進んだし、購入の仕方や手続き、予算などすべて納得した上で良い買い物ができたと思っています。SUBARUさんは良い社員教育をしているんだなと思いました。 ちなみにネットでの情報収集ですが、 ハンターチャンネルの正直レビュー はとても参考にさせていただきました。おかげで満足のいく買い物ができました。すばらしい情報発信ありがとうございます。 SUBARU FORESTERのレビュー 購入したのは FORESTER アドバンス 5AA-SKE 2020年10月モデル になります。2021年にマイナーチェンジしてしまったので既に型落ちですが、型落ちになることが決まっていたからこそキャンペーンが組まれていて割安になっていたことや、マイナーチェンジの内容がそこまで魅力的な内容でなかったことからこれにしました。 実は僕、マイカーを所持するのは20年ぶりくらいで、クルマは好きなのにも関わらず所持しない生活を送ってきました。そんな自分がいざ最新のマイカーを手に入れて見ると、自分がいかに浦島太郎になっていたかを実感しました。今のクルマは電気的最新技術の集合体ですね…。レーントレースなどの運転支援、クラッシュ回避ブレーキやエアバッグなどの安全装備、ドライブレコーダーやカーナビとの連携、EV走行への切り替え、四輪駆動の制御、何事も電気的に事細かく制御されていて非常に高い次元で快適なドライブができるようになっている。 アイサイト いまさらだけどやはり アイサイト はすごい。これを使うと、前車追従、速度維持、レーンキープが行われるので、運転者が行う操作が大幅に減ります。正しくコントロールされている状態ではペダルを操作する必要がなくなり、高速道路での運転が楽になるのは言わずもがな、渋滞でのストレスも減ったし、一般道でもうまく使えば十分に使えるレベルだと思います。 ただあくまで運転支援であり、自動運転のようなレベルにはほど遠いので過信は禁物というところで、例えば赤信号に反応して停止することなどはできないし（前走車がいてそれが停車すればこちらも停止できるが、自分が先頭だと無理）、センターラインや障害物などがはっきりとしていない道路ではレーンキープの挙動も怪しいものです。あとは発進後に直ちに設定速度まで加速しようとするので、普通はこのタイミングで加速しないよ、というタイミングで加速しようとするとか。カーブが多い道だと、ちょっと怖いです。 そんな欠点も認識しつつ、アイサイトを使っていって感じたのは クルマは自分で転がっていくので、そのサポートをする という感覚で、これまでの クルマを操作する・運転する という感覚とは異質なものです。まさに新しい体験だと言えます。 他社のクルマももっとじっくり試乗して、運転支援技術の比較もしてみれば面白かったかもしれません。Toyota Safety Senseとか、HONDA SENSINGとか、MAZDA i-ACTIVSENSEなどは、どの程度実用的なのかは気になります。 走行性能 アイサイトを使わずに普通に運転しても、AWDによる十分な走行性能があります。自分がかつて運転してきたクルマはFRとFFですが、どちらの感覚とも違う四輪の設置感がある気がします。これは水平対向エンジンのおかげかもしれないですが、こんなに腰高なのにカーブを曲がる時にあまりロールしないですね。そして、踏んだら踏んだ分進んで行く。 ただやはり車重があるので重さは感じます。上り坂では多めに踏んでやらないと登っていきません。SUVを選んだ時点でこれは仕方ないですね…。 e-BOXERと燃費 あとe-BOXERというハイブリッドシステムですが、低速走行時や下り坂走行時にEV走行になるだけで、他は基本的にエンジン走行になります。面白いのはエンジンとモーターが同時に働くこと。停止状態または低速状態から加速するときにこの状態になるのですが、低速走行時のトルクをモーターで補っているらしいです。 エンジン走行とEV走行は自動的に制御され、アイドリングストップの制御含め、かなり頻繁に切り替えが行われます。かなり自然に切り替えが行われていると感じるし、頑張った制御になっていると思うのですが、エンジン再始動時の振動がどうしても気になるときはあります。 ここ数ヶ月で観測している燃費は7〜15km/lとかなり幅があります。街乗りだと10km/l前後。ストップアンドゴーの多い低速走行ばかりだと7km/l程度。高速道路を使った長距離移動時は15km/lくらい出ることもあります。燃費を良くするためのコツはなるべくECOモードでアイサイト走行をすること。ECOモードにすると加速時のアクセル開度がマイルドになって、エンジン回転数があまり上がらないようになります。もちろん、加速はのろくなりますがね…。 タイムズカーについて クルマを所持しない生活を送ってきた僕は、必要なときはレンタカーを借りるなどしてきましたが、結婚して家族と出かける機会が増えてからは タイムズカー を利用してきました。 タイムズカーはステーションも多いしスマホから簡単に予約やキャンセルができて大変便利に使っていたのですが、愛犬が乗せられないのと、1週間前くらい前に予定を決めて予約しておかないと大体は予約がいっぱいになってしまって借りられない。当日に思いつきで出かけたり、突然必要になったときには使えないので、日々の足として使うような使い方はできないんですよね。 後書き モノを所持する必要がなくなっていくこの時代に逆行するようではありますが、マイカーを手に入れて新しい生活を始めてみた、というのが自分の2021年となりました。 2022年はこの新しい生活スタイルをベースに、コロナ禍から立ち直っていきつつある社会により適応していきたいと考えています。関係者の皆様は今年も何卒よろしくお願いいたします。]]></description>
										<content:encoded><![CDATA[<p>明けましておめでとうございます。<br />
前回のブログポストから一年程度空いて、早くも年が明けてしまいました。遅ればせながら去年あったことを振り返ってみます。<br />
緊急事態宣言下が長かった2021年、ほぼオフィスにはいかずリモートワークで自宅に引きこもっていて、対面で人に会うことがほぼなく、社会との接点が希薄になっていたと思います。</p>

<p>そんな中で生活を最適化すべく、自宅の生活が快適になるように行動した一年と言って良いです。大きなところでは6月に引越しをして、9月にはマイカーを手に入れました。</p>

<p>公共交通機関で移動することが大きく減ったので、駅に近いことはそこまでメリットにならない現状があり、逆に駅から遠くても駐車場付きの広い家に住み、クルマを買った方が行動範囲が広がるのではないかと考えました。また、2020年から飼い始めた愛犬（ミニチュア・シュナウザー<img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2642.png" alt="♂" class="wp-smiley" style="height: 1em; max-height: 1em;" />）と出かけるために、マイカーがあると便利なこともあります。こうした考えから、生活をシフトしてみました。</p>

<p><a href="/wp-content/uploads/2021/12/forester.jpg"><img fetchpriority="high" decoding="async" src="/wp-content/uploads/2021/12/forester-1024x768.jpg" alt="SUBARU FORESTER" width="584" height="438" class="alignnone size-large wp-image-1487" srcset="/wp-content/uploads/2021/12/forester-1024x768.jpg 1024w, /wp-content/uploads/2021/12/forester-300x225.jpg 300w, /wp-content/uploads/2021/12/forester-768x576.jpg 768w, /wp-content/uploads/2021/12/forester-1536x1152.jpg 1536w, /wp-content/uploads/2021/12/forester-400x300.jpg 400w, /wp-content/uploads/2021/12/forester.jpg 2024w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>家族と相談してSUVを買うことは決めていて、 候補になっていたのは SUBARU FORESTER, TOYOTA RAV4, HONDA VEZEL の3つでした。検討の結果、FORESTERを購入したわけですが、そこに至るまでにはネットで情報収集するだけでなく、自動車ディーラーにも行きました。老舗の自動車ディーラーで高価な買い物をするのは初めての体験でしたが、実物を見たり触れたりできるし、カタログや資料はいろいろと見ることができるし、営業さんが様々な情報を教えてくれるし…と、なかなか面白かったです。</p>

<p>あとは比較検討した各社（というより各営業所？各担当者？）の違いが感じられたのも面白い体験でした。<br />
とある担当者はとても事務的であっさりした対応でした。こちらが買ってくれるような客にとても見えなかったのかもしれません。<br />
またとある担当者はニコニコと愛想が良い割に製品知識がなく、上司がほとんど製品の説明をフォローしていました。その担当者の付き添いで試乗もしましたが、操作や機能の説明などを全然してくれないのでどんな機能があったのかはよくわからなかったです。悲しい…。<br />
またとある担当者は製品知識に豊富で、試乗のときにもよく機能について説明してくれたり、ちゃんと売る気満々で、他社との検討状況や、こちらの予算を考慮してくれたりと懇切丁寧に接客してくれました。</p>

<p>というわけで、その懇切丁寧な対応をしてくれた営業担当者さんのお店で買うことに決めたのですが、その方のおかげでよくクルマへの理解が進んだし、購入の仕方や手続き、予算などすべて納得した上で良い買い物ができたと思っています。SUBARUさんは良い社員教育をしているんだなと思いました。</p>

<p>ちなみにネットでの情報収集ですが、 <a href="https://www.youtube.com/channel/UChcn5tnl9nop-uM_B40_pqQ/videos">ハンターチャンネルの正直レビュー</a> はとても参考にさせていただきました。おかげで満足のいく買い物ができました。すばらしい情報発信ありがとうございます。</p>

<h2>SUBARU FORESTERのレビュー</h2>

<p>購入したのは <a href="https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%90%E3%83%AB%E3%83%BB%E3%83%95%E3%82%A9%E3%83%AC%E3%82%B9%E3%82%BF%E3%83%BC#5%E4%BB%A3%E7%9B%AE_SK%E7%B3%BB%EF%BC%882018%E5%B9%B4_-_%EF%BC%89">FORESTER アドバンス 5AA-SKE 2020年10月モデル</a> になります。2021年にマイナーチェンジしてしまったので既に型落ちですが、型落ちになることが決まっていたからこそキャンペーンが組まれていて割安になっていたことや、マイナーチェンジの内容がそこまで魅力的な内容でなかったことからこれにしました。</p>

<p>実は僕、マイカーを所持するのは20年ぶりくらいで、クルマは好きなのにも関わらず所持しない生活を送ってきました。そんな自分がいざ最新のマイカーを手に入れて見ると、自分がいかに浦島太郎になっていたかを実感しました。今のクルマは電気的最新技術の集合体ですね…。レーントレースなどの運転支援、クラッシュ回避ブレーキやエアバッグなどの安全装備、ドライブレコーダーやカーナビとの連携、EV走行への切り替え、四輪駆動の制御、何事も電気的に事細かく制御されていて非常に高い次元で快適なドライブができるようになっている。</p>

<h3>アイサイト</h3>

<p>いまさらだけどやはり <a href="https://ja.wikipedia.org/wiki/EyeSight#%E3%82%A2%E3%82%A4%E3%82%B5%E3%82%A4%E3%83%88%E3%83%BB%E3%83%84%E3%83%BC%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%A2%E3%82%B7%E3%82%B9%E3%83%88">アイサイト</a> はすごい。これを使うと、前車追従、速度維持、レーンキープが行われるので、運転者が行う操作が大幅に減ります。正しくコントロールされている状態ではペダルを操作する必要がなくなり、高速道路での運転が楽になるのは言わずもがな、渋滞でのストレスも減ったし、一般道でもうまく使えば十分に使えるレベルだと思います。</p>

<p>ただあくまで運転支援であり、自動運転のようなレベルにはほど遠いので過信は禁物というところで、例えば赤信号に反応して停止することなどはできないし（前走車がいてそれが停車すればこちらも停止できるが、自分が先頭だと無理）、センターラインや障害物などがはっきりとしていない道路ではレーンキープの挙動も怪しいものです。あとは発進後に直ちに設定速度まで加速しようとするので、普通はこのタイミングで加速しないよ、というタイミングで加速しようとするとか。カーブが多い道だと、ちょっと怖いです。</p>

<p>そんな欠点も認識しつつ、アイサイトを使っていって感じたのは <strong>クルマは自分で転がっていくので、そのサポートをする</strong> という感覚で、これまでの <strong>クルマを操作する・運転する</strong> という感覚とは異質なものです。まさに新しい体験だと言えます。</p>

<p>他社のクルマももっとじっくり試乗して、運転支援技術の比較もしてみれば面白かったかもしれません。Toyota Safety Senseとか、HONDA SENSINGとか、MAZDA i-ACTIVSENSEなどは、どの程度実用的なのかは気になります。</p>

<h3>走行性能</h3>

<p>アイサイトを使わずに普通に運転しても、AWDによる十分な走行性能があります。自分がかつて運転してきたクルマはFRとFFですが、どちらの感覚とも違う四輪の設置感がある気がします。これは水平対向エンジンのおかげかもしれないですが、こんなに腰高なのにカーブを曲がる時にあまりロールしないですね。そして、踏んだら踏んだ分進んで行く。</p>

<p>ただやはり車重があるので重さは感じます。上り坂では多めに踏んでやらないと登っていきません。SUVを選んだ時点でこれは仕方ないですね…。</p>

<h3>e-BOXERと燃費</h3>

<p>あとe-BOXERというハイブリッドシステムですが、低速走行時や下り坂走行時にEV走行になるだけで、他は基本的にエンジン走行になります。面白いのはエンジンとモーターが同時に働くこと。停止状態または低速状態から加速するときにこの状態になるのですが、低速走行時のトルクをモーターで補っているらしいです。</p>

<p>エンジン走行とEV走行は自動的に制御され、アイドリングストップの制御含め、かなり頻繁に切り替えが行われます。かなり自然に切り替えが行われていると感じるし、頑張った制御になっていると思うのですが、エンジン再始動時の振動がどうしても気になるときはあります。</p>

<p>ここ数ヶ月で観測している燃費は7〜15km/lとかなり幅があります。街乗りだと10km/l前後。ストップアンドゴーの多い低速走行ばかりだと7km/l程度。高速道路を使った長距離移動時は15km/lくらい出ることもあります。燃費を良くするためのコツはなるべくECOモードでアイサイト走行をすること。ECOモードにすると加速時のアクセル開度がマイルドになって、エンジン回転数があまり上がらないようになります。もちろん、加速はのろくなりますがね…。</p>

<h2>タイムズカーについて</h2>

<p>クルマを所持しない生活を送ってきた僕は、必要なときはレンタカーを借りるなどしてきましたが、結婚して家族と出かける機会が増えてからは <a href="https://share.timescar.jp/">タイムズカー</a> を利用してきました。</p>

<p>タイムズカーはステーションも多いしスマホから簡単に予約やキャンセルができて大変便利に使っていたのですが、愛犬が乗せられないのと、1週間前くらい前に予定を決めて予約しておかないと大体は予約がいっぱいになってしまって借りられない。当日に思いつきで出かけたり、突然必要になったときには使えないので、日々の足として使うような使い方はできないんですよね。</p>

<h2>後書き</h2>

<p>モノを所持する必要がなくなっていくこの時代に逆行するようではありますが、マイカーを手に入れて新しい生活を始めてみた、というのが自分の2021年となりました。</p>

<p>2022年はこの新しい生活スタイルをベースに、コロナ禍から立ち直っていきつつある社会により適応していきたいと考えています。関係者の皆様は今年も何卒よろしくお願いいたします。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>さくらのVPSから Lightsail へ引っ越した</title>
		<link>/2021/01/lightsail</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 03 Jan 2021 15:18:52 +0000</pubDate>
				<category><![CDATA[Web Development]]></category>
		<category><![CDATA[AWS]]></category>
		<guid isPermaLink="false">/?p=1462</guid>

					<description><![CDATA[さくらのVPSを使ってこのサイトをホスティングしてきた のだが、この度 AWS の Lightsail に引っ越した。 引っ越しした最大の理由は、契約して以降長らく使いっぱなしのマシンの OS が CentOS 6 だったから。 CentOS 6 は11月30日でサポートが終了 しており、そのまま運用するわけにもいかないぞ…と目下の課題だった。 それに、さくらのVPSを使っていたことには積極的な理由はなく惰性でそうしていただけだ。2020年12月時点でこのサイトのホスティングと、likealunatic.jp ドメインに紐づいたメールアドレスを Gmail に転送することにしか利用していなかった。メールは現在 Gmail のアドレスしか使っていないので、独自ドメインのメールアドレスは捨てることにした。引越し先では WordPress サイトのホスティングだけできればよい。 移転先として Lightsail を選んだのは、現在の仕事で AWS を利用しているため、少しでもサービスに触る機会を増やしたかったから。まあ、業務で Lightsail は使わないわけだけど…。それに調べてみると Lightsail の方がさくらのVPSよりコストが安いし、スペックも見劣りすることもなかったので。 年末年始の宿題として取り組むつもりだったのだが、思いのほか簡単に済んでしまって拍子抜けだった。 ほぼ こちらの記事（［Lightsail］さくらインターネットからAWS LightsailにWordPressを最速で移行する – スモールスタート編 &#124; ma-ya&#8217;s CREATE / WEB DESIGN） で紹介されている手順で作業は完了した。とても有用な記事をありがとうございます。 つまづいたポイントとしては HTTPS 化の作業で sudo /opt/bitnami/bncert-tool した際に、 Warning: The domain 'mydomain.com' resolves to a different IP address than the one detected for this machine, which is 'aa.bb.ccc.dddd'. Please fix its DNS entries or remove it. For more info see: https://docs.bitnami.com/general/faq/configuration/configure-custom-domain/ というようなメッセージが表示され、それ以上設定が進められなくなったこと。 これはドメインのゾーン情報に、旧サーバーを指すAレコードが残っているからだった。さくらインターネット会員メニューのドメイン設定画面からAレコードを削除したら解決。 &#8230; というわけで2021年も始まりましたが、こちらはのらりくらりとやっていこうと思っています。 改めまして、明けましておめでとうございます。本年もよろしくお願いいたします。 References ［Lightsail］さくらインターネットからAWS LightsailにWordPressを最速で移行する – スモールスタート編 &#124; ma-ya&#8217;s CREATE / WEB DESIGN SFTP を使用して Amazon Lightsail の Linux または UNIX インスタンスに接続する &#8230; <a href="/2021/01/lightsail">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p><a href="/2015/07/server-moving">さくらのVPSを使ってこのサイトをホスティングしてきた</a> のだが、この度 AWS の <a href="https://aws.amazon.com/jp/lightsail/">Lightsail</a> に引っ越した。</p>

<p>引っ越しした最大の理由は、契約して以降長らく使いっぱなしのマシンの OS が CentOS 6 だったから。 <a href="https://cybersecurity-tokyo.jp/security/cyberthreat/259/">CentOS 6 は11月30日でサポートが終了</a> しており、そのまま運用するわけにもいかないぞ…と目下の課題だった。<br />
それに、さくらのVPSを使っていたことには積極的な理由はなく惰性でそうしていただけだ。2020年12月時点でこのサイトのホスティングと、likealunatic.jp ドメインに紐づいたメールアドレスを Gmail に転送することにしか利用していなかった。メールは現在 Gmail のアドレスしか使っていないので、独自ドメインのメールアドレスは捨てることにした。引越し先では WordPress サイトのホスティングだけできればよい。</p>

<p>移転先として Lightsail を選んだのは、現在の仕事で AWS を利用しているため、少しでもサービスに触る機会を増やしたかったから。まあ、業務で Lightsail は使わないわけだけど…。それに調べてみると Lightsail の方がさくらのVPSよりコストが安いし、スペックも見劣りすることもなかったので。</p>

<p>年末年始の宿題として取り組むつもりだったのだが、思いのほか簡単に済んでしまって拍子抜けだった。</p>

<p>ほぼ <a href="https://myscreate.com/migration-sakura-from-aws/">こちらの記事（［Lightsail］さくらインターネットからAWS LightsailにWordPressを最速で移行する – スモールスタート編 | ma-ya&#8217;s CREATE / WEB DESIGN）</a> で紹介されている手順で作業は完了した。とても有用な記事をありがとうございます。</p>

<p>つまづいたポイントとしては HTTPS 化の作業で <code>sudo /opt/bitnami/bncert-tool</code> した際に、</p>

<pre><code>Warning: The domain 'mydomain.com' resolves to a different IP address than the
one detected for this machine, which is 'aa.bb.ccc.dddd'. Please fix its DNS
entries or remove it. For more info see:
https://docs.bitnami.com/general/faq/configuration/configure-custom-domain/
</code></pre>

<p>というようなメッセージが表示され、それ以上設定が進められなくなったこと。
これはドメインのゾーン情報に、旧サーバーを指すAレコードが残っているからだった。さくらインターネット会員メニューのドメイン設定画面からAレコードを削除したら解決。</p>

<p>&#8230;</p>

<p>というわけで2021年も始まりましたが、こちらはのらりくらりとやっていこうと思っています。
改めまして、明けましておめでとうございます。本年もよろしくお願いいたします。</p>

<h2>References</h2>

<ul>
<li><a href="https://myscreate.com/migration-sakura-from-aws/">［Lightsail］さくらインターネットからAWS LightsailにWordPressを最速で移行する – スモールスタート編 | ma-ya&#8217;s CREATE / WEB DESIGN</a></li>
<li><a href="https://lightsail.aws.amazon.com/ls/docs/ja_jp/articles/amazon-lightsail-connecting-to-linux-unix-instance-using-sftp">SFTP を使用して Amazon Lightsail の Linux または UNIX インスタンスに接続する &#124; Lightsail ドキュメント</a></li>
<li><a href="https://help.sakura.ad.jp/206207381/">ネームサーバ利用申請 – さくらのサポート情報</a></li>
<li><a href="https://oji-cloud.net/2018/06/10/post-43/">WordPressサイトアドレスをhttpsに変更する（Really Simple SSL） &#124; Oji&#45;Cloud</a></li>
</ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>M1 Mac について調べたことあれこれ</title>
		<link>/2020/11/m1-mac</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 22 Nov 2020 07:35:08 +0000</pubDate>
				<category><![CDATA[Development]]></category>
		<category><![CDATA[Mac]]></category>
		<guid isPermaLink="false">/?p=1452</guid>

					<description><![CDATA[この3連休にゆっくり情報収集していたら、M1 Mac がとても欲しくなってしまった。買うなら今使ってる MacBook Pro 13-inch の同モデルへの買い替えかな。 とはいえ Homebrew 動かないとか、そういった情報もあり、開発用に簡単に使うには少しハードルがまだある模様。Rosetta 2 を使えばなんとかなるのかな？とも思うけど使用感がわからない。現状そこまで困っていないので、しばらく様子見。 M1 と Apple Silicon について Apple は Aシリーズと名付けた自社製 Soc（Apple Silicon）を iPhone、iPad、Apple Watch、Apple TV などに搭載してきた。Aシリーズを Mac 向けに強化したのが M1。 SoC は「System on a chip」の略で、CPU、GPU、メモリなどの集積回路を1つのパッケージで実現したチップ。モバイルなどの小さなデバイスは大体このチップを使って作られている。 ARM はコアのアーキテクチャの一種で、それを使って各社 SoC を実装しており、Apple Silicon もこのアーキテクチャを採用している。 M1 は 5nm プロセスを採用した初の PC 向けチップで、160 億個のトランジスタを搭載。 M1 Mac について すべて Big Sur (macOS 11) 搭載。 MacBook Air はファンレスでタッチバーなし。MacBook Pro はファンありの冷却システムを持つ分ピーク性能が上。 アプリについて Intel プロセッサ向けバイナリと Apple Silicon 向けバイナリを1つのパッケージでまとめた「Universal Apps」と、Intel プロセッサ向けバイナリを M1 Mac で動作させる「Rosetta 2」を提供。 iOS 向けのアプリが、M1 Mac では直接動作するようになる。 References Apple Silicon搭載MacBook AirとMacBook Pro、Mac miniの違いは？　比較まとめ &#40;1/4&#41; &#45; ITmedia NEWS 初のApple Siliconとなる「M1」チップが登場、5nmプロセスで製造された世界最速のCPU搭載 &#45; GIGAZINE Apple Silicon「M1」搭載Mac登場　MacBook Air、Mac mini、MacBook Proの3機種 &#45; ITmedia NEWS System&#45;on&#45;a&#45;chip &#45; Wikipedia Rebuild: 288: Unidentified Mysterious Animal &#40;hak&#41; 「ARM」という単語の意味を啓蒙する記事 &#45; &#8230; <a href="/2020/11/m1-mac">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>この3連休にゆっくり情報収集していたら、M1 Mac がとても欲しくなってしまった。買うなら今使ってる MacBook Pro 13-inch の同モデルへの買い替えかな。</p>

<p>とはいえ Homebrew 動かないとか、そういった情報もあり、開発用に簡単に使うには少しハードルがまだある模様。Rosetta 2 を使えばなんとかなるのかな？とも思うけど使用感がわからない。現状そこまで困っていないので、しばらく様子見。</p>

<h2>M1 と Apple Silicon について</h2>

<ul>
<li>Apple は Aシリーズと名付けた自社製 Soc（Apple Silicon）を iPhone、iPad、Apple Watch、Apple TV などに搭載してきた。Aシリーズを Mac 向けに強化したのが M1。</li>
<li>SoC は「System on a chip」の略で、CPU、GPU、メモリなどの集積回路を1つのパッケージで実現したチップ。モバイルなどの小さなデバイスは大体このチップを使って作られている。</li>
<li>ARM はコアのアーキテクチャの一種で、それを使って各社 SoC を実装しており、Apple Silicon もこのアーキテクチャを採用している。</li>
<li>M1 は 5nm プロセスを採用した初の PC 向けチップで、160 億個のトランジスタを搭載。</li>
</ul>

<h2>M1 Mac について</h2>

<ul>
<li>すべて Big Sur (macOS 11) 搭載。</li>
<li>MacBook Air はファンレスでタッチバーなし。MacBook Pro はファンありの冷却システムを持つ分ピーク性能が上。</li>
</ul>

<h2>アプリについて</h2>

<ul>
<li>Intel プロセッサ向けバイナリと Apple Silicon 向けバイナリを1つのパッケージでまとめた「Universal Apps」と、Intel プロセッサ向けバイナリを M1 Mac で動作させる「Rosetta 2」を提供。</li>
<li>iOS 向けのアプリが、M1 Mac では直接動作するようになる。</li>
</ul>

<h2>References</h2>

<ul>
<li><a href="https://www.itmedia.co.jp/news/articles/2011/11/news070.html">Apple Silicon搭載MacBook AirとMacBook Pro、Mac miniの違いは？　比較まとめ &#40;1/4&#41; &#45; ITmedia NEWS</a></li>
<li><a href="https://gigazine.net/news/20201111-apple-silicon-m1/">初のApple Siliconとなる「M1」チップが登場、5nmプロセスで製造された世界最速のCPU搭載 &#45; GIGAZINE</a></li>
<li><a href="https://www.itmedia.co.jp/news/articles/2011/11/news066.html">Apple Silicon「M1」搭載Mac登場　MacBook Air、Mac mini、MacBook Proの3機種 &#45; ITmedia NEWS</a></li>
<li><a href="https://ja.wikipedia.org/wiki/System-on-a-chip">System&#45;on&#45;a&#45;chip &#45; Wikipedia</a></li>
<li><a href="https://rebuild.fm/288/">Rebuild: 288: Unidentified Mysterious Animal &#40;hak&#41;</a></li>
<li><a href="https://essay.zopfco.de/entry/2020/11/21/232504">「ARM」という単語の意味を啓蒙する記事 &#45; Zopfcode Essay</a></li>
<li><a href="https://qiita.com/shibukawa/items/797b7cbb7e530842e6f7">M1 Macの開発環境 &#45; Qiita</a></li>
</ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>フルリモートワークの課題感</title>
		<link>/2020/06/remotework-issues</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 14 Jun 2020 07:08:17 +0000</pubDate>
				<category><![CDATA[Miscellany]]></category>
		<category><![CDATA[Misc]]></category>
		<guid isPermaLink="false">/?p=1438</guid>

					<description><![CDATA[しばらくぶりのブログ。最近はというと転職し、5月から新しい会社で働いている。 新型コロナウィルスの影響もあって、IT企業はリモートワークが一般的になったとは思う。しかし新しい会社のユニークなところは、そもそもフルリモート勤務がOKなところだ。リモート勤務前提で、地方から参画しているメンバーもいる。（もちろん、希望すればオフィスに行ってもOK） 緊急事態宣言の影響もあって転職前の環境からリモートワークとなっていたが、実際にこの数ヶ月フルリモートワークをしてみて、いろいろ思うところはあった。いま感じている課題は以下のようなものだ。 他チームとの連携の難しさ（特にリアルタイムコミュニケーションを必要としている職種との） Slack を見ていると結局同期的なコミュニケーションになりがちで、自由な働き方にはほど遠い うまく成果をあげられないメンバーをどうフォローするか うまくいかずに悩んでいるメンバーが悩んでいる過程が見えにくい。「悩んでいます」と言える人はそもそも自分で解決する能力がある人。問題はそれが言えない人をどうフォローするか 自身の成果が、会社や上司からどう見られているかがわかりにくい。会社はそれをどのようにわかりやすく評価するか 属人化による悪影響が顕著に現れる 属人化している業務があると、緊急を要する事態が起きたときにダメージが大きい わかりやすいドキュメンテーションが命で、誰かに聞かないとわからない業務があると業務が滞りがち ナレッジ的に属人化している業務は情報共有で解決するが、スキル的に属人化している業務はいまいるメンバーではどうにもならない。適切な人材を採用するかアウトソーシングするしかない（あ、これはリモートワークとは関係ないか） ネガティブなことばかり書いてしまったが、良いことだってもちろんある。しかしまあ、通勤が必要ないとか、家族との時間が増えるとか、そういう一般的なことなのでわざわざここで書かなくていいかな。 ところで GitLab は会社の経営方針を Handbook として公開していて、スタートアップにとってとても参考になる。そのうち GitLab&#8217;s Guide to All-Remote はリモートワークチームにおけるスタンダードを示していると思ったので、以下に引用しておきたい。 Hiring and working from all over the world instead of from a central location. 一極集中ではなく、全世界から採用し働く Flexible working hours over set working hours. 固定された業務時間より、フレックスタイム Writing down and recording knowledge over verbal explanations. 口頭による説明より、書き起こされ、記録されたナレッジ Written down processes over on-the-job training. OJTより、書き起こされたプロセス Public sharing of information over need-to-know access. 知る必要がある人にだけ与える情報共有より、公にする情報共有 Opening up every document for editing by anyone over top-down control of documents. ドキュメントはトップダウンで管理するより、誰でも編集できるようにすべてのドキュメントを公開する Asynchronous communication over synchronous communication. 同期的なコミュニケーションより、非同期的なコミュニケーション The results of work over the hours put in. 使った時間より、仕事の成果 Formal communication channels over informal communication channels. 非公式なコミュニケーションチャネルより、公式なコミュニケーションチャネル 簡単には諦めずに改善を積み重ねて、うまく回せるようなチームを作っていきたい。]]></description>
										<content:encoded><![CDATA[<p>しばらくぶりのブログ。最近はというと転職し、5月から新しい会社で働いている。</p>

<p>新型コロナウィルスの影響もあって、IT企業はリモートワークが一般的になったとは思う。しかし新しい会社のユニークなところは、そもそもフルリモート勤務がOKなところだ。リモート勤務前提で、地方から参画しているメンバーもいる。（もちろん、希望すればオフィスに行ってもOK）</p>

<p>緊急事態宣言の影響もあって転職前の環境からリモートワークとなっていたが、実際にこの数ヶ月フルリモートワークをしてみて、いろいろ思うところはあった。いま感じている課題は以下のようなものだ。</p>

<ul>
<li>他チームとの連携の難しさ（特にリアルタイムコミュニケーションを必要としている職種との）</li>
<li>Slack を見ていると結局同期的なコミュニケーションになりがちで、自由な働き方にはほど遠い</li>
<li>うまく成果をあげられないメンバーをどうフォローするか</li>
<li>うまくいかずに悩んでいるメンバーが悩んでいる過程が見えにくい。「悩んでいます」と言える人はそもそも自分で解決する能力がある人。問題はそれが言えない人をどうフォローするか</li>
<li>自身の成果が、会社や上司からどう見られているかがわかりにくい。会社はそれをどのようにわかりやすく評価するか</li>
<li>属人化による悪影響が顕著に現れる</li>
<li>属人化している業務があると、緊急を要する事態が起きたときにダメージが大きい</li>
<li>わかりやすいドキュメンテーションが命で、誰かに聞かないとわからない業務があると業務が滞りがち</li>
<li>ナレッジ的に属人化している業務は情報共有で解決するが、スキル的に属人化している業務はいまいるメンバーではどうにもならない。適切な人材を採用するかアウトソーシングするしかない（あ、これはリモートワークとは関係ないか）</li>
</ul>

<p>ネガティブなことばかり書いてしまったが、良いことだってもちろんある。しかしまあ、通勤が必要ないとか、家族との時間が増えるとか、そういう一般的なことなのでわざわざここで書かなくていいかな。</p>

<p>ところで GitLab は会社の経営方針を <a href="https://about.gitlab.com/handbook/">Handbook</a> として公開していて、スタートアップにとってとても参考になる。そのうち <a href="https://about.gitlab.com/company/culture/all-remote/guide/">GitLab&#8217;s Guide to All-Remote</a> はリモートワークチームにおけるスタンダードを示していると思ったので、以下に引用しておきたい。</p>

<blockquote>
  <ol>
  <li><p>Hiring and working from all over the world instead of from a central location.<br />
  一極集中ではなく、全世界から採用し働く</p></li>
  <li><p>Flexible working hours over set working hours.<br />
  固定された業務時間より、フレックスタイム</p></li>
  <li><p>Writing down and recording knowledge over verbal explanations.<br />
  口頭による説明より、書き起こされ、記録されたナレッジ</p></li>
  <li><p>Written down processes over on-the-job training.<br />
  OJTより、書き起こされたプロセス</p></li>
  <li><p>Public sharing of information over need-to-know access.<br />
  知る必要がある人にだけ与える情報共有より、公にする情報共有</p></li>
  <li><p>Opening up every document for editing by anyone over top-down control of documents.<br />
  ドキュメントはトップダウンで管理するより、誰でも編集できるようにすべてのドキュメントを公開する</p></li>
  <li><p>Asynchronous communication over synchronous communication.<br />
  同期的なコミュニケーションより、非同期的なコミュニケーション</p></li>
  <li><p>The results of work over the hours put in.<br />
  使った時間より、仕事の成果</p></li>
  <li><p>Formal communication channels over informal communication channels.<br />
  非公式なコミュニケーションチャネルより、公式なコミュニケーションチャネル</p></li>
  </ol>
</blockquote>

<p>簡単には諦めずに改善を積み重ねて、うまく回せるようなチームを作っていきたい。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>イベント参加メモ: kiitok Career Market Vol.1</title>
		<link>/2020/02/kiitok-career-market-vol-1</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 02 Feb 2020 15:08:40 +0000</pubDate>
				<category><![CDATA[Event]]></category>
		<category><![CDATA[Career]]></category>
		<guid isPermaLink="false">/?p=1422</guid>

					<description><![CDATA[2/1（土）に Career Market &#124; mixi、CA、DMM等のメガベンとスタートアップのエンジニアが集い、キャリアを語るカンファレンス に参加してきました。 &#8220;Vol.1 メガベンとスタートアップで得られるキャリア資産の違いとは？&#8221; とも題されており、メガベンチャーやスタートアップで活躍されているエンジニア出身の偉い人や現役エンジニアの方々が登壇されていろいろ語る、というものでした。 当日取ったメモをポストします。 Keynote Session: メガベンチャー/スタートアップでのエンジニアのキャリパスのすべてとその歩み方 転職／退職したい理由とは 新しいものに惹かれているのか？今の環境から離れたいのか？ その技術を極めたいならコミュニティにいけばいい。その技術を使ったたくさんの人が使うサービスを作りたいならその会社に行けばいい 環境から離れるタイミング 未来が自分の想像できる範囲になると離れる人もいれば、未来が見えないと不安になる人もいる 自分にとってストレッチの効いたミッションがその環境になくなったら 成長するとスコープが大きくなる 何をやりたいのか？ 長期的な視点と、短期的な視点が必要 入るための道具と、入ってから得られる道具は違う 道具を目的に合わせていったん整理する 入るための道具は一本強いのがあれば大丈夫では 意味ない筋肉はあまりないけど、見せる筋肉はここだけ、みたいな これやって意味あるのかな？と思うより、信じて行うことが大事 やってみたら意味があったこと マーケティングとか。昔はバカにしていた 人と比較するのはやめましょう。しかしポジティブな人たちと一緒に働くことが重要 お互いに何が強いのか尊重しあえるチームがヘルシー いいやつになること。口角をあげよう。話しかけられるような人になろう Give First 相手が論理的に話しているのか、感情的に話しているのか。慰めてほしいのか、アドバイスがほしいのかを見極めて話そう 相手から思わしくない反応があるときもあるが「こんなにしてやってるのに」と思った時点で本当のGiveではない。Giveし続けることが大事。 Session1: メガベンとスタートアップの現場の本音。採用、異動、開発現場、組織文化、給与、評価についてポジもネガも包み隠さず話します どんな人が採用されやすいのか？ 採用基準は？ その人がチームに入ったときに何が起きるのか、想像できること 自走できるかどうか 型を身につけているかどうか。軸足は残してもらって、プラスチャレンジをしてもらいたい スタートアップはそれぞれの強みをいかしてチームで進んでいけることが重要 面接でどんな質問してる？ どんな瞬間が嬉しいか？ 成果とアプローチどちらか一個でいいので、すごいのを教えてください よくあるのが、成果なんだけどチームの成果です、ってパターン 個人の話を語ってほしい その人の得意技はなんなのか？ ビジネスに対する理解や興味はどのくらいあるか？ チームメートにどこを頼られますか？ 開発言語やツールはどうやって決まるのか 現場の声は比較的反映される（CA） どっかの部署で使ってみて、うまくいったら全社に展開するパターンが多い どれだけ再利用できるのか？（EXAWIZARDS） ドキュメンテーション必須 有識者が決定したら、議論の余地はない 開発組織の文化 自分が言ったものが伝わらない前提でコミュニケーションする（EXAWIZARDS） 成果物をきちんと計測／数値化して、自分の仕事に自信を持ってもらう 評価制度 技術的に難易度が高いことへの挑戦、ビジネスの成功は分離して考える（EXAWIZARDS） 評価はしない。フィードバックはする（PLAID） ここ1、2年でようやく整ってきた。グレード制。透明性を重視（CA） 第二新卒の採用基準 いまの環境がいやだ！という人は、自分の会社に来てもそうなってしまうのではないか、と思ってしまう 個人でアウトプットしている人 技術領域の広げ方 一年に一つ新しいことをやるといい。同時に複数のことはやらない 尖っていないから表に出てないけど、手広くやって社内で活躍している人も多い（CA） スタートアップは何でもやらなきゃいけない。でも軸がある人の方が良い Session2: なぜ私はこのキャリアパスを歩んできたか？スタートアップとメガベンキャリアを選択してきた第一線エンジニアに聞く 戦略性：そのキャリア、狙ってましたか？ 掛け算的なキャリアにすべし キャリアの意思決定 今後自分がやりたい領域にいけば。自分の場合はスマホシフトの時期に、それにちゃんと向き合っている会社へ行った（黒木さん） やりきった感。何をやりたいんだ自分は、となった時期があったが、どこに行っていいかわからなかったので転職をいったんやめた。プライベートを充実させ、悩みから離れた。社内転職して気分を変えた。（二串さん） 120％頑張れば届く、ところにチャレンジする。それ以上ストレッチすると失敗する。手の届くところを高くするために、日々精進すべし 転職するなら、なぜこの会社を辞めたいのか。なぜこの会社に入りたいのか。これがちゃんと説明できるべき Session3: 2025年までのエンジニア生存戦略 この過去5年で起きているトレンドの変化 オンプレがクラウドになった。いろんなことがソフトウェアに飲み込まれた Firebase とかが出てきて、バックエンドエンジニアへの需要に変化が？ メルカリ筆頭にスタートアップ増えた。資金調達とか デジタルトランスフォーメーション Horizontal Saas はレッドオーシャン化した。Private な Saas とか、ターゲットを絞った Saas が流行 需要の変化 オフショアを活用すると、その単価と競争しないといけない その領域、その分野しかできない、となると需要は減る 掛け算ができていないと需要は減る 自分で企画はできないけども、事業は理解できる、とかでないと。技術だけできるワガママなエンジニアはもう生き残れない 技術アンテナが立っていることが重要。Java/PHP をやっていること自体は悪くない。ただ、海外にライバルが多い システム全体を設計できるか？が重要 どれだけシステムの目的志向で動けているか 技術的な知識やドメインの知識は必要条件であって、十分条件ではない サービスを届けられて、事業が成功すれば、最悪知らなくていい。知っていないと普通はできないから知るべき、というだけ ソフトウェアがすべてを飲み込むことで、大きなことを小さなチームでできるようになった コミュニケーション能力があって、好奇心を持つこと。そうでないとチーム内で浮いてしまう。9割ディスカッションしていて、1割作業する、とか、極端に言えばその方がいい &#8230; <a href="/2020/02/kiitok-career-market-vol-1">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>2/1（土）に <a href="https://kiitok-careemarket.studio.design/">Career Market | mixi、CA、DMM等のメガベンとスタートアップのエンジニアが集い、キャリアを語るカンファレンス</a> に参加してきました。<br />
<strong>&#8220;Vol.1 メガベンとスタートアップで得られるキャリア資産の違いとは？&#8221;</strong> とも題されており、メガベンチャーやスタートアップで活躍されているエンジニア出身の偉い人や現役エンジニアの方々が登壇されていろいろ語る、というものでした。<br />
当日取ったメモをポストします。</p>

<hr />

<h2>Keynote Session: メガベンチャー/スタートアップでのエンジニアのキャリパスのすべてとその歩み方</h2>

<p>転職／退職したい理由とは</p>

<ul>
<li>新しいものに惹かれているのか？今の環境から離れたいのか？</li>
<li>その技術を極めたいならコミュニティにいけばいい。その技術を使ったたくさんの人が使うサービスを作りたいならその会社に行けばいい</li>
</ul>

<p>環境から離れるタイミング</p>

<ul>
<li>未来が自分の想像できる範囲になると離れる人もいれば、未来が見えないと不安になる人もいる</li>
<li>自分にとってストレッチの効いたミッションがその環境になくなったら

<ul>
<li>成長するとスコープが大きくなる</li>
</ul></li>
<li>何をやりたいのか？

<ul>
<li>長期的な視点と、短期的な視点が必要</li>
</ul></li>
<li>入るための道具と、入ってから得られる道具は違う

<ul>
<li>道具を目的に合わせていったん整理する</li>
<li>入るための道具は一本強いのがあれば大丈夫では</li>
<li>意味ない筋肉はあまりないけど、見せる筋肉はここだけ、みたいな</li>
<li>これやって意味あるのかな？と思うより、信じて行うことが大事</li>
</ul></li>
<li>やってみたら意味があったこと

<ul>
<li>マーケティングとか。昔はバカにしていた</li>
</ul></li>
<li>人と比較するのはやめましょう。しかしポジティブな人たちと一緒に働くことが重要</li>
<li>お互いに何が強いのか尊重しあえるチームがヘルシー</li>
<li>いいやつになること。口角をあげよう。話しかけられるような人になろう</li>
<li>Give First

<ul>
<li>相手が論理的に話しているのか、感情的に話しているのか。慰めてほしいのか、アドバイスがほしいのかを見極めて話そう</li>
<li>相手から思わしくない反応があるときもあるが「こんなにしてやってるのに」と思った時点で本当のGiveではない。Giveし続けることが大事。</li>
</ul></li>
</ul>

<h2>Session1: メガベンとスタートアップの現場の本音。採用、異動、開発現場、組織文化、給与、評価についてポジもネガも包み隠さず話します</h2>

<p>どんな人が採用されやすいのか？</p>

<ul>
<li>採用基準は？

<ul>
<li>その人がチームに入ったときに何が起きるのか、想像できること</li>
<li>自走できるかどうか</li>
<li>型を身につけているかどうか。軸足は残してもらって、プラスチャレンジをしてもらいたい</li>
<li>スタートアップはそれぞれの強みをいかしてチームで進んでいけることが重要</li>
</ul></li>
<li>面接でどんな質問してる？

<ul>
<li>どんな瞬間が嬉しいか？</li>
<li>成果とアプローチどちらか一個でいいので、すごいのを教えてください

<ul>
<li>よくあるのが、成果なんだけどチームの成果です、ってパターン</li>
<li>個人の話を語ってほしい</li>
</ul></li>
<li>その人の得意技はなんなのか？</li>
<li>ビジネスに対する理解や興味はどのくらいあるか？</li>
<li>チームメートにどこを頼られますか？</li>
</ul></li>
<li>開発言語やツールはどうやって決まるのか

<ul>
<li>現場の声は比較的反映される（CA）

<ul>
<li>どっかの部署で使ってみて、うまくいったら全社に展開するパターンが多い</li>
</ul></li>
<li>どれだけ再利用できるのか？（EXAWIZARDS）

<ul>
<li>ドキュメンテーション必須</li>
<li>有識者が決定したら、議論の余地はない</li>
</ul></li>
</ul></li>
<li>開発組織の文化

<ul>
<li>自分が言ったものが伝わらない前提でコミュニケーションする（EXAWIZARDS）</li>
<li>成果物をきちんと計測／数値化して、自分の仕事に自信を持ってもらう</li>
</ul></li>
<li>評価制度

<ul>
<li>技術的に難易度が高いことへの挑戦、ビジネスの成功は分離して考える（EXAWIZARDS）</li>
<li>評価はしない。フィードバックはする（PLAID）</li>
<li>ここ1、2年でようやく整ってきた。グレード制。透明性を重視（CA）</li>
</ul></li>
<li>第二新卒の採用基準

<ul>
<li>いまの環境がいやだ！という人は、自分の会社に来てもそうなってしまうのではないか、と思ってしまう</li>
<li>個人でアウトプットしている人</li>
</ul></li>
<li>技術領域の広げ方

<ul>
<li>一年に一つ新しいことをやるといい。同時に複数のことはやらない</li>
<li>尖っていないから表に出てないけど、手広くやって社内で活躍している人も多い（CA）</li>
<li>スタートアップは何でもやらなきゃいけない。でも軸がある人の方が良い</li>
</ul></li>
</ul>

<h2>Session2: なぜ私はこのキャリアパスを歩んできたか？スタートアップとメガベンキャリアを選択してきた第一線エンジニアに聞く</h2>

<h3>戦略性：そのキャリア、狙ってましたか？</h3>

<ul>
<li>掛け算的なキャリアにすべし</li>
</ul>

<h3>キャリアの意思決定</h3>

<ul>
<li>今後自分がやりたい領域にいけば。自分の場合はスマホシフトの時期に、それにちゃんと向き合っている会社へ行った（黒木さん）</li>
<li>やりきった感。何をやりたいんだ自分は、となった時期があったが、どこに行っていいかわからなかったので転職をいったんやめた。プライベートを充実させ、悩みから離れた。社内転職して気分を変えた。（二串さん）</li>
<li>120％頑張れば届く、ところにチャレンジする。それ以上ストレッチすると失敗する。手の届くところを高くするために、日々精進すべし</li>
<li>転職するなら、なぜこの会社を辞めたいのか。なぜこの会社に入りたいのか。これがちゃんと説明できるべき</li>
</ul>

<h2>Session3: 2025年までのエンジニア生存戦略</h2>

<p>この過去5年で起きているトレンドの変化</p>

<ul>
<li>オンプレがクラウドになった。いろんなことがソフトウェアに飲み込まれた</li>
<li>Firebase とかが出てきて、バックエンドエンジニアへの需要に変化が？</li>
<li>メルカリ筆頭にスタートアップ増えた。資金調達とか</li>
<li>デジタルトランスフォーメーション</li>
<li>Horizontal Saas はレッドオーシャン化した。Private な Saas とか、ターゲットを絞った Saas が流行
需要の変化</li>
<li>オフショアを活用すると、その単価と競争しないといけない

<ul>
<li>その領域、その分野しかできない、となると需要は減る</li>
<li>掛け算ができていないと需要は減る</li>
</ul></li>
<li>自分で企画はできないけども、事業は理解できる、とかでないと。技術だけできるワガママなエンジニアはもう生き残れない</li>
<li>技術アンテナが立っていることが重要。Java/PHP をやっていること自体は悪くない。ただ、海外にライバルが多い</li>
<li>システム全体を設計できるか？が重要</li>
<li>どれだけシステムの目的志向で動けているか</li>
<li>技術的な知識やドメインの知識は必要条件であって、十分条件ではない

<ul>
<li>サービスを届けられて、事業が成功すれば、最悪知らなくていい。知っていないと普通はできないから知るべき、というだけ</li>
</ul></li>
<li>ソフトウェアがすべてを飲み込むことで、大きなことを小さなチームでできるようになった</li>
<li>コミュニケーション能力があって、好奇心を持つこと。そうでないとチーム内で浮いてしまう。9割ディスカッションしていて、1割作業する、とか、極端に言えばその方がいい</li>
<li>仕様が決まっていなかったら、こちらから提案する、という姿勢</li>
</ul>

<h3>求人ニーズの変化</h3>

<ul>
<li>未経験を取らなくなった</li>
<li>じゃぶじゃぶした VC 投資は減ってくるはず。スタートアップは減っていく</li>
<li>大企業が DX を進める文脈で、小さいチームで小さいサービスを作っていく、というのは今後も続く</li>
<li>サーバーサイドは本質的に、サービスとして実際の運用をしたことがないとできない</li>
<li>会社は何らかのサービスを提供している。それを巻き取るような動きをしていけば経験が積める</li>
</ul>

<hr />

<p>メモは以上。</p>

<p>エンジニアとしての生存戦略を考えるという点で、とても参考になる話ばかりでした。<br />
第一線で活躍されている方々を見たり話を聞いたりすると、やる気が湧いてきます。登壇者の方も語っていましたが、ポジティブなエネルギーを発している人と仕事をするってことが重要ですね。<br />
僕もまだまだ、エンジニアとして食っていくぞ。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>結婚のプロジェクトマネジメント</title>
		<link>/2019/09/project-management-for-wedding</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 01 Sep 2019 11:46:38 +0000</pubDate>
				<category><![CDATA[Miscellany]]></category>
		<category><![CDATA[Misc]]></category>
		<guid isPermaLink="false">/?p=1369</guid>

					<description><![CDATA[ここ一年ほどの出来事で自分のもっとも大きなニュースを取り上げるとしたら、結婚したことです。 去年の3月に入籍、12月に式と披露宴を挙げました。そして今年6月にはイタリアに新婚旅行に行ってひと段落したというところです。僕はお世辞にも社交的とは言えない人物なので、こんな自分と一緒にいてくれる人がいることに感謝していますし、率直に言って今、僕は幸せです。 ゼクシィをはじめとした結婚をテーマとしたメディアがありますが、そういったものを読めば読むほど奥が深いというか、きちんとやろうとすると大変なのだということを思い知らされます。ゼクシィも読んだのですが、本屋で目にした 『結婚の段取り&#38;しきたりのすべてがわかる大事典』 なんて本も買って読んでみたりもしました。こんな本を買っておくと、それこそ「引出物はいくらくらいのものを買えばいいのか」とかそんな細かな疑問に対する答えがすぐ分かるので心強かったです。 2017年末にプロポーズしてからの一連の流れでしたが、ちょっとのんびりしすぎました。すべてのイベントをこなすのに一年半かかってしまった。 一つ一つのイベントがどうだったかということについて細かく書くつもりはありません。最大のイベントとしては結婚式・披露宴がありました。親族・近しい友人のみを招待した小規模なものでしたし、二次会も開催していません。もし二次会もやっていたらさらに大変になっていたはず…、と思うと、開催したという方は素直にすごいと思います。 さてさて、そんなことはさておき、結婚というイベントに対してITエンジニアという仕事人としてどう向き合ったか、という視点で書いていきたいと思います。 式場選び 大きな決断の一つに式場選びがありました。 奥さんの希望で和装婚にすることは決まっていましたので、まずそれが実現できる会場という前提はありました。ゼクシィを読んだり、友人・知人の話を聞いたりして情報収集し、最終的に3箇所の式場に下見（いわゆるブライダルフェアというもの）に行きました。 3つ目のフェアに参加した帰り、食事をしながらだったと思いますが、式場への評価を整理するためメモ帳に表を描き、奥さんに手渡して書き込んでもらいました。 列には 会場A, 会場B, 会場C を書き込み、行には評価項目を列挙し、それぞれ5点満点で点数を書き込んでいきます。評価項目は「会場（披露宴会場として魅力的か）」「式場（結婚式場として魅力的か）」「衣装」「料理」「コストパフォーマンス」「自由記入欄（自分で評価項目を自由に決定）」の全6項目で、30点満点。 もう一枚同じ表を描いて自分も評価を書き込んだ後、お互いに見せ合うと評価が高い会場が一致。もめずに結論が出ました。 タスク管理 すべてのタスクは Trello で管理しました。 以下のスクリーンショットではすでにタスクはすべて「完了」ボードに入ってしまっていますが… Trello は典型的なカンバンツールで、職場でも利用していて使い勝手を知っていたので採用しました。 使い方ですが、まずプライベートな専用のボードを作ります。 「計画」「進行中」「完了」の3つのリストを作って、計画段階ではゼクシィなどを見つつ、検討すべきタスクをすべて「計画」にカードとして書き込んでしまいます。必要かどうかは後で奥さんと相談。不要なら削除。進めるべきなら残し、わかる範囲で期限を書き込みます。 そして実際にタスクに着手したら「進行中」のリストにカードを移動。調査した情報や、相談した内容、打ち合わせで決まったことなど、カードの中にコメントでどんどん書いていきます。担当者とやりとりしたメールや、iPhoneで撮った写真なども、どんどん貼り付けて、関連する情報を集約します。 そして完了したものについては「完了」リストに移動します。 完了したものについてもカードを期日順に並べておくとか、情報としては後でまた参照しやすいようにしておいた方が良いです。 ところで、うちの奥さんはITには無頓着で、スマホは使えますが、PCは全く使うことができません。 Trello アプリを奥さんのスマホにインストールし、ユーザー登録を行ってボードに招待。カードの更新があったらメールで通知を受け取れるように設定し、少なくとも情報を読んでもらえるようにしました。つまりリードオンリーなメンバーとして Trello には参加してもらうことにしました。 招待客管理など また、招待客などの管理には Google スプレッドシートを使用しました。以下のようなシートを作りました。 招待客の個人情報一覧： 項目は親族カテゴリ、名前、新郎新婦との関係、郵便番号、住所、電話番号、出席可否、苦手な食べ物、備考。 招待客と引出物一覧： 項目は親族カテゴリ、名前、新郎新婦との関係、メインの引出物とその金額、引菓子とその金額、縁起物とその金額、合計金額、席次表上の配布位置。 招待客といただいたご祝儀の一覧： 項目は各個人情報、招待有無、出席有無、金額、商品名、お返しの品名、関連URL 席次表： 会場が用意してくれた席次表。どの席にどの引出物を配置するかは引出物一覧と連携。 BGM一覧： シーン、アーティスト名、曲名、関連URL これについてはそれ以上言うことはないのですが、一覧の管理にはやはりスプレッドシートは便利です。 プロフィールムービー 披露宴に利用する新郎新婦プロフィール紹介ムービーは、iMovie で自作しました。 単なる画像のスライドショーなので、まあいけるだろう、という軽い気持ちで始めたもののこのタスクがもっともヘビーになってしまいました。 技術的に大したことはなかったのですが、写真の選定に多くの時間を使ってしまいました。 ムービーの尺・構成を検討する。新郎→新婦→両方、尺は約3分という構成に決まる 実家に赴き、自分の幼年・青年時代のアルバムから写真を選定。奥さんにも同じく写真を選定してきてもらう iMovie に写真を配置しつつ、キャプションをつけていく。写真が多すぎて全然3分の尺に収まらない…。写真を厳選し、尺を削る、とにかく削る 僕は自宅にプリンターもスキャナーも持っていないので、写真をデジタルデータに変換するためには、セブンイレブンのマルチコピー機を利用しました。USBメモリかスマホにデータを送信できるのでとても便利です。 決定した構成を決定した尺で実現するためにはどの程度の写真とキャプションが必要、ということを最初からよく話し合えていたら、こんなに苦労をしなくて済んだかもしれません。それを考えずたくさんの写真を持ち込んでいきあたりばったりに作業を開始してしまったがために、いたずらに時間を消費してしまいました。かなり反省…。 所感 結婚というイベントに際して全般的に言えることは、決断の連続だということです。その問題について、二人で一つ一つ答えを出していかなければいけません。 僕も奥さんもどちらかというとのんびりとしており、特に奥さんは優柔不断と言ってもいい性格なので、お互いの合意を取りつつ決断を続けていくということに地味に精神力を使いました。ただ、その中で二人の絆が深まったことも確かなので、それはそれでよかったのかな、と。 それと忘れてはいけないのはとてもお金がかかるということ。収支管理をしっかりとしないと、大赤字なんてことになりかねません。 いろいろ苦労はありましたが、ハイライトとも言える披露宴では「ゲストに楽しんでいただく」という気持ちを忘れずに取り組みました。笑顔が絶えない披露宴になったのでそれは達成できたかと思っています。 久しぶりの投稿になりましたが、この辺で。]]></description>
										<content:encoded><![CDATA[<p>ここ一年ほどの出来事で自分のもっとも大きなニュースを取り上げるとしたら、結婚したことです。<br />
去年の3月に入籍、12月に式と披露宴を挙げました。そして今年6月にはイタリアに新婚旅行に行ってひと段落したというところです。僕はお世辞にも社交的とは言えない人物なので、こんな自分と一緒にいてくれる人がいることに感謝していますし、率直に言って今、僕は幸せです。</p>

<p>ゼクシィをはじめとした結婚をテーマとしたメディアがありますが、そういったものを読めば読むほど奥が深いというか、きちんとやろうとすると大変なのだということを思い知らされます。ゼクシィも読んだのですが、本屋で目にした <a href="https://amzn.to/2PtHtPt" rel="noopener" target="_blank">『結婚の段取り&amp;しきたりのすべてがわかる大事典』</a> なんて本も買って読んでみたりもしました。こんな本を買っておくと、それこそ「引出物はいくらくらいのものを買えばいいのか」とかそんな細かな疑問に対する答えがすぐ分かるので心強かったです。</p>

<p>2017年末にプロポーズしてからの一連の流れでしたが、ちょっとのんびりしすぎました。すべてのイベントをこなすのに一年半かかってしまった。<br />
一つ一つのイベントがどうだったかということについて細かく書くつもりはありません。最大のイベントとしては結婚式・披露宴がありました。親族・近しい友人のみを招待した小規模なものでしたし、二次会も開催していません。もし二次会もやっていたらさらに大変になっていたはず…、と思うと、開催したという方は素直にすごいと思います。</p>

<p>さてさて、そんなことはさておき、結婚というイベントに対してITエンジニアという仕事人としてどう向き合ったか、という視点で書いていきたいと思います。</p>

<h2>式場選び</h2>

<p>大きな決断の一つに式場選びがありました。<br />
奥さんの希望で和装婚にすることは決まっていましたので、まずそれが実現できる会場という前提はありました。ゼクシィを読んだり、友人・知人の話を聞いたりして情報収集し、最終的に3箇所の式場に下見（いわゆるブライダルフェアというもの）に行きました。</p>

<p>3つ目のフェアに参加した帰り、食事をしながらだったと思いますが、式場への評価を整理するためメモ帳に表を描き、奥さんに手渡して書き込んでもらいました。</p>

<p><a href="/wp-content/uploads/2019/09/2019-08-wedding-place-decision-grid.png"><img decoding="async" src="/wp-content/uploads/2019/09/2019-08-wedding-place-decision-grid.png" alt="会場決定のためのマトリックス図" width="640" height="760" class="alignnone size-full wp-image-1389" srcset="/wp-content/uploads/2019/09/2019-08-wedding-place-decision-grid.png 640w, /wp-content/uploads/2019/09/2019-08-wedding-place-decision-grid-253x300.png 253w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>

<p>列には 会場A, 会場B, 会場C を書き込み、行には評価項目を列挙し、それぞれ5点満点で点数を書き込んでいきます。評価項目は「会場（披露宴会場として魅力的か）」「式場（結婚式場として魅力的か）」「衣装」「料理」「コストパフォーマンス」「自由記入欄（自分で評価項目を自由に決定）」の全6項目で、30点満点。</p>

<p>もう一枚同じ表を描いて自分も評価を書き込んだ後、お互いに見せ合うと評価が高い会場が一致。もめずに結論が出ました。</p>

<h2>タスク管理</h2>

<p>すべてのタスクは <a href="https://trello.com/">Trello</a> で管理しました。<br />
以下のスクリーンショットではすでにタスクはすべて「完了」ボードに入ってしまっていますが…</p>

<p><a href="/wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80.png"><img decoding="async" src="/wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80-1024x990.png" alt="Trelloボード" width="584" height="565" class="alignnone size-large wp-image-1383" srcset="/wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80-1024x990.png 1024w, /wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80-300x290.png 300w, /wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80-768x743.png 768w, /wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80-310x300.png 310w, /wp-content/uploads/2019/07/89b88f2848849ff761a180df4c217d80.png 1522w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>Trello は典型的なカンバンツールで、職場でも利用していて使い勝手を知っていたので採用しました。</p>

<p>使い方ですが、まずプライベートな専用のボードを作ります。<br />
「計画」「進行中」「完了」の3つのリストを作って、計画段階ではゼクシィなどを見つつ、検討すべきタスクをすべて「計画」にカードとして書き込んでしまいます。必要かどうかは後で奥さんと相談。不要なら削除。進めるべきなら残し、わかる範囲で期限を書き込みます。<br />
そして実際にタスクに着手したら「進行中」のリストにカードを移動。調査した情報や、相談した内容、打ち合わせで決まったことなど、カードの中にコメントでどんどん書いていきます。担当者とやりとりしたメールや、iPhoneで撮った写真なども、どんどん貼り付けて、関連する情報を集約します。</p>

<p>そして完了したものについては「完了」リストに移動します。<br />
完了したものについてもカードを期日順に並べておくとか、情報としては後でまた参照しやすいようにしておいた方が良いです。</p>

<p>ところで、うちの奥さんはITには無頓着で、スマホは使えますが、PCは全く使うことができません。<br />
Trello アプリを奥さんのスマホにインストールし、ユーザー登録を行ってボードに招待。カードの更新があったらメールで通知を受け取れるように設定し、少なくとも情報を読んでもらえるようにしました。つまりリードオンリーなメンバーとして Trello には参加してもらうことにしました。</p>

<h2>招待客管理など</h2>

<p>また、招待客などの管理には Google スプレッドシートを使用しました。以下のようなシートを作りました。</p>

<ul>
<li>招待客の個人情報一覧： 項目は親族カテゴリ、名前、新郎新婦との関係、郵便番号、住所、電話番号、出席可否、苦手な食べ物、備考。</li>
<li>招待客と引出物一覧： 項目は親族カテゴリ、名前、新郎新婦との関係、メインの引出物とその金額、引菓子とその金額、縁起物とその金額、合計金額、席次表上の配布位置。</li>
<li>招待客といただいたご祝儀の一覧： 項目は各個人情報、招待有無、出席有無、金額、商品名、お返しの品名、関連URL</li>
<li>席次表： 会場が用意してくれた席次表。どの席にどの引出物を配置するかは引出物一覧と連携。</li>
<li>BGM一覧： シーン、アーティスト名、曲名、関連URL</li>
</ul>

<p>これについてはそれ以上言うことはないのですが、一覧の管理にはやはりスプレッドシートは便利です。</p>

<h2>プロフィールムービー</h2>

<p>披露宴に利用する新郎新婦プロフィール紹介ムービーは、iMovie で自作しました。</p>

<p><a href="/wp-content/uploads/2019/07/screen-shot-imovie.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2019/07/screen-shot-imovie-1024x678.jpg" alt="iMovie Project" width="584" height="387" class="alignnone size-large wp-image-1386" srcset="/wp-content/uploads/2019/07/screen-shot-imovie-1024x678.jpg 1024w, /wp-content/uploads/2019/07/screen-shot-imovie-300x199.jpg 300w, /wp-content/uploads/2019/07/screen-shot-imovie-768x509.jpg 768w, /wp-content/uploads/2019/07/screen-shot-imovie-453x300.jpg 453w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>単なる画像のスライドショーなので、まあいけるだろう、という軽い気持ちで始めたもののこのタスクがもっともヘビーになってしまいました。
技術的に大したことはなかったのですが、写真の選定に多くの時間を使ってしまいました。</p>

<ul>
<li>ムービーの尺・構成を検討する。新郎→新婦→両方、尺は約3分という構成に決まる</li>
<li>実家に赴き、自分の幼年・青年時代のアルバムから写真を選定。奥さんにも同じく写真を選定してきてもらう</li>
<li>iMovie に写真を配置しつつ、キャプションをつけていく。写真が多すぎて全然3分の尺に収まらない…。写真を厳選し、尺を削る、とにかく削る</li>
</ul>

<p>僕は自宅にプリンターもスキャナーも持っていないので、写真をデジタルデータに変換するためには、<a href="https://www.fujixerox.co.jp/solution/multicopy/application/application_multicopy_ad-scan.html">セブンイレブンのマルチコピー機</a>を利用しました。USBメモリかスマホにデータを送信できるのでとても便利です。</p>

<p>決定した構成を決定した尺で実現するためにはどの程度の写真とキャプションが必要、ということを最初からよく話し合えていたら、こんなに苦労をしなくて済んだかもしれません。それを考えずたくさんの写真を持ち込んでいきあたりばったりに作業を開始してしまったがために、いたずらに時間を消費してしまいました。かなり反省…。</p>

<h2>所感</h2>

<p>結婚というイベントに際して全般的に言えることは、決断の連続だということです。その問題について、二人で一つ一つ答えを出していかなければいけません。<br />
僕も奥さんもどちらかというとのんびりとしており、特に奥さんは優柔不断と言ってもいい性格なので、お互いの合意を取りつつ決断を続けていくということに地味に精神力を使いました。ただ、その中で二人の絆が深まったことも確かなので、それはそれでよかったのかな、と。</p>

<p>それと忘れてはいけないのはとてもお金がかかるということ。収支管理をしっかりとしないと、大赤字なんてことになりかねません。</p>

<p>いろいろ苦労はありましたが、ハイライトとも言える披露宴では「ゲストに楽しんでいただく」という気持ちを忘れずに取り組みました。笑顔が絶えない披露宴になったのでそれは達成できたかと思っています。</p>

<p>久しぶりの投稿になりましたが、この辺で。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Noto Serif CJK JP を Web フォントとして使う</title>
		<link>/2018/05/noto-serif-cjk-web-fonts</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sun, 06 May 2018 07:50:18 +0000</pubDate>
				<category><![CDATA[Web Design]]></category>
		<category><![CDATA[Web Development]]></category>
		<guid isPermaLink="false">/?p=1351</guid>

					<description><![CDATA[仕事で明朝体のサイトを作ることになったので Noto Serif CJK が Web フォントとして使えないか、と調査した。 Noto Sans JP は CDN 配信されている が、Noto Serif JP は配信されていないので、自前でファイルを持つ必要があるのだ。これはめんどくさいぞ…。 まずは Noto CJK – Google Noto Fonts の &#8220;Region-specific Subset OpenType/CFF (Subset OTF)&#8221; というセクションから使いたいウェイトをダウンロード。今回は NotoSerifCJK-Regular.ttc を選択した。 Web フォントとして使用するために ttc ファイルを woff2 と woff に変換する。今回は WOFFコンバータ を使うことにした。 できたデモがこちら。 NotoSerifCJK-Regular をWeb フォントとして使用するデモ ファイルサイズは woff2 で 4.5 MB、woff で 5.2 MB だ。これでも &#8220;Regision-specific Subset&#8221; とサブセット化されているものだが、まだ実用に耐えうるサイズじゃない。Chrome のネットワークエミュレーションで &#8220;Fast 3G&#8221; を選択するとダウンロードするのに 24.51 秒かかる。ちなみに通常の環境（光＋Wifi）だと 674 ミリ秒。うーむ。 というわけでさらなるサブセット化に取り組むことにする。これには サブセットフォントメーカー を使う。 ネット検索し、「第一水準漢字＋記号＋ローマ字＋カタカナ＋ひらがな」のソースを探すが、信頼に足るものがいまいち見つからない。 まずはこちらさんを試す。 ん、なんだか漢字少なすぎじゃない？ ではこちらさんはどうだろう。 えぇ…、「j」がないよ…。 で、結局、漢字のセクションだけ後者、それ以外を前者から頂戴する形でサブセット化。 うむ。まぁこれでよかろう。 サーバーにアップロードして、と。 サブセット化した NotoSerifCJK-Regular を使用するデモ Chrome DevTools で同じ条件（Fast 3G）で見てみると…、3.87秒。及第点じゃないだろうか。 本日はこの辺で。 References Articles Google Fonts「Noto Serif CJK JP（源ノ明朝）」の使い方｜プラカンブログ &#124; WEB制作会社プラスデザインカンパニー Google Fonts「Noto Serif CJK JP」を使ってみる ｜ Tips Note by TAM &#91;CSS&#93;Web制作者が知っておきたい、Webフォントを快適に表示するCSSの新しいプロパティ「font&#45;display」 &#124; コリス 日本語Webフォントをサブセット化して軽量化する方法 &#124; &#8230; <a href="/2018/05/noto-serif-cjk-web-fonts">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>仕事で明朝体のサイトを作ることになったので <a href="https://www.google.com/get/noto/help/cjk/">Noto Serif CJK</a> が Web フォントとして使えないか、と調査した。
<a href="https://fonts.google.com/earlyaccess#Noto+Sans+JP">Noto Sans JP は CDN 配信されている</a> が、Noto Serif JP は配信されていないので、自前でファイルを持つ必要があるのだ。これはめんどくさいぞ…。</p>

<p>まずは <a href="https://www.google.com/get/noto/help/cjk/">Noto CJK – Google Noto Fonts</a> の &#8220;Region-specific Subset OpenType/CFF (Subset OTF)&#8221; というセクションから使いたいウェイトをダウンロード。今回は NotoSerifCJK-Regular.ttc を選択した。</p>

<p>Web フォントとして使用するために ttc ファイルを woff2 と woff に変換する。今回は <a href="https://opentype.jp/woffconv.htm">WOFFコンバータ</a> を使うことにした。
できたデモがこちら。</p>

<p><a href="/fonts/demo.html" class="btn btn-info" role="button">NotoSerifCJK-Regular をWeb フォントとして使用するデモ</a></p>

<p>ファイルサイズは woff2 で 4.5 MB、woff で 5.2 MB だ。これでも &#8220;Regision-specific Subset&#8221; とサブセット化されているものだが、まだ実用に耐えうるサイズじゃない。Chrome のネットワークエミュレーションで &#8220;Fast 3G&#8221; を選択するとダウンロードするのに 24.51 秒かかる。ちなみに通常の環境（光＋Wifi）だと 674 ミリ秒。うーむ。</p>

<p><a href="/wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5.png"><img loading="lazy" decoding="async" src="/wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5-1024x646.png" alt="Noto Serif JP - 単にwoffに変換した状態" width="584" height="368" class="alignnone size-large wp-image-1352" srcset="/wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5-1024x646.png 1024w, /wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5-300x189.png 300w, /wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5-768x485.png 768w, /wp-content/uploads/2018/05/ac7d48b1c976439809a4dbcfef6da2e5-475x300.png 475w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>というわけでさらなるサブセット化に取り組むことにする。これには <a href="https://opentype.jp/subsetfontmk.htm">サブセットフォントメーカー</a> を使う。
ネット検索し、「第一水準漢字＋記号＋ローマ字＋カタカナ＋ひらがな」のソースを探すが、信頼に足るものがいまいち見つからない。</p>

<p>まずは<a href="https://gist.githubusercontent.com/yokotak0527/6354609/raw/7df06d2931cec43a2144e84f2f54e35f18da2db5/gistfile1.txt">こちらさん</a>を試す。
ん、なんだか漢字少なすぎじゃない？</p>

<p><a href="/wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb.png"><img loading="lazy" decoding="async" src="/wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb-1024x530.png" alt="Noto Serif JP - サブセット化1" width="584" height="302" class="alignnone size-large wp-image-1355" srcset="/wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb-1024x530.png 1024w, /wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb-300x155.png 300w, /wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb-768x398.png 768w, /wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb-500x259.png 500w, /wp-content/uploads/2018/05/6877b20154b4e0f0aa643517e49b78eb.png 1618w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>では<a href="https://drive.google.com/file/d/0Bza38quoCtHqM004SE1QUVlNLWc/view">こちらさん</a>はどうだろう。
えぇ…、「j」がないよ…。</p>

<p><a href="/wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47.png"><img loading="lazy" decoding="async" src="/wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47-1024x533.png" alt="Noto Serif JP - サブセット化2" width="584" height="304" class="alignnone size-large wp-image-1356" srcset="/wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47-1024x533.png 1024w, /wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47-300x156.png 300w, /wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47-768x400.png 768w, /wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47-500x260.png 500w, /wp-content/uploads/2018/05/36cadf5438b55915b05137941fa4be47.png 1606w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>で、結局、漢字のセクションだけ後者、それ以外を前者から頂戴する形でサブセット化。
うむ。まぁこれでよかろう。</p>

<p><a href="/wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381.png"><img loading="lazy" decoding="async" src="/wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381-1024x535.png" alt="Noto Serif JP - サブセット化3" width="584" height="305" class="alignnone size-large wp-image-1357" srcset="/wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381-1024x535.png 1024w, /wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381-300x157.png 300w, /wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381-768x401.png 768w, /wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381-500x261.png 500w, /wp-content/uploads/2018/05/a7ca6af25ce068fcf20c530ed11a4381.png 1620w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>サーバーにアップロードして、と。</p>

<p><a href="/fonts/demo.html" class="btn btn-info" role="button">サブセット化した NotoSerifCJK-Regular を使用するデモ</a></p>

<p>Chrome DevTools で同じ条件（Fast 3G）で見てみると…、3.87秒。及第点じゃないだろうか。</p>

<p><a href="/wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c.png"><img loading="lazy" decoding="async" src="/wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c-1024x756.png" alt="Noto Serif JP - Noto Serif JP - サブセット化した後の計測" width="584" height="431" class="alignnone size-large wp-image-1358" srcset="/wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c-1024x756.png 1024w, /wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c-300x222.png 300w, /wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c-768x567.png 768w, /wp-content/uploads/2018/05/345b52b806890fc972c90b33d18b7a6c-406x300.png 406w" sizes="(max-width: 584px) 100vw, 584px" /></a></p>

<p>本日はこの辺で。</p>

<h2>References</h2>

<h3>Articles</h3>

<ul>
<li><a href="https://www.plusdesign.co.jp/blog/?p=8854">Google Fonts「Noto Serif CJK JP（源ノ明朝）」の使い方｜プラカンブログ &#124; WEB制作会社プラスデザインカンパニー</a></li>
<li><a href="https://www.tam-tam.co.jp/tipsnote/html_css/post13175.html">Google Fonts「Noto Serif CJK JP」を使ってみる ｜ Tips Note by TAM</a></li>
<li><a href="https://coliss.com/articles/build-websites/operation/css/about-font-display.html">&#91;CSS&#93;Web制作者が知っておきたい、Webフォントを快適に表示するCSSの新しいプロパティ「font&#45;display」 &#124; コリス</a></li>
<li><a href="https://heysho.com/webfont/">日本語Webフォントをサブセット化して軽量化する方法 &#124; HEYSHO&#46;COM</a> </li>
<li><a href="http://brian.hatenablog.jp/entry/how-to-set-web-fonts">10分で設定完了！Webフォントの使い方や軽量化・はてなブログでの設定手順、優良リソースなどまとめ【おすすめ日本語フォントも】 &#45; Brian&#8217;z Imagination</a></li>
</ul>

<h3>Resources</h3>

<ul>
<li><a href="https://www.google.com/get/noto/help/cjk/">Noto CJK – Google Noto Fonts</a></li>
<li><a href="https://opentype.jp/subsetfontmk.htm">サブセットフォントメーカー</a></li>
<li><a href="https://opentype.jp/woffconv.htm">WOFFコンバータ</a></li>
</ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>30代半ばフロントエンドエンジニア、テクニカルディレクターの転職活動について</title>
		<link>/2017/08/careerchangenote</link>
		
		<dc:creator><![CDATA[Naoki Sekiguchi]]></dc:creator>
		<pubDate>Sat, 12 Aug 2017 10:16:19 +0000</pubDate>
				<category><![CDATA[Miscellany]]></category>
		<category><![CDATA[Career]]></category>
		<category><![CDATA[Misc]]></category>
		<guid isPermaLink="false">/?p=1277</guid>

					<description><![CDATA[転職をした訳だが、想像以上に苦労したのでその旨、誰かの役に立つかもしれないと思って Web 上に記録しておきたい。 当方、Web 制作会社に9年間勤めたフロントエンドエンジニア兼テクニカルディレクターである。年齢は30代半ば。受託案件ではなく、自社サービスやプロダクトの開発がやりたくて転職を決意する。 2017年4月、退職を上司に宣言した上で転職活動を始めた。 6月に現職業務終了、7〜8月に有休消化して退職、8月中旬に新環境で就業、という予定を建てていた。 まずはエージェントなどに頼らず、自分自身の力で転職活動を経験してみたいと思ったので、求人サービスにプロフィール登録してみた。 結果的に Wantedly、paiza、pasonatech、green を利用。 実働の割合的にはほぼ Wantedly 経由でのスカウトや応募だった。実働は会社訪問6件、面接2件 paiza はサーバーサイドの仕事が多くほぼ自分とマッチしなかったが、実働は面接4件 green は最低限のプロフィールだけ登録して一晩置いたら、匿名スカウトが何通も届いていたのでうんざりして使うのをやめた。よって実働なし。ロクにプロフィールを書いてもいないのに、スカウトをよこす人事って一体…。下手な鉄砲も数打ちゃ当たるという感じ？ pasonatech は10年前くらいに派遣社員をやっていたときにお世話になっていた派遣会社。サービス内の検索でヒットした求人に条件に合うものがほぼなかったので、応募はしなかった。よって実働なし 転職先の希望条件について 転職先について、以下のような希望があった。 事業面 自社サービスやプロダクトを活発に運営している 会社が目指すべき明瞭なビジョンがある 新規事業に対して積極的 娯楽事業（ゲーム、映画、音楽、ギャンブルなど）とマッチング事業は、やりがいを感じられそうにないので避けたい デザイナーが社内にいる 極力制作を外注に出さない 正社員が30人以上いる 文化・生活面 スーツで出勤しなくていい できれば朝早く出勤しなくていい できればオフィスがダサくない できればパーティーとか社員旅行とか煩わしいイベントが多くない 待遇面 年収が現在より下がらない 一般的な福利厚生がある 活動概況 Wantedly、paiza、green ではプロフィール登録すると、すぐに何件かスカウトメッセージをもらった。まずまずの手応えを感じつつ会社訪問に行く。 正直、転職先のイメージなんて曖昧なものでしかなかった。何せ9年間、同じ会社に勤めていたのだから。軽く浦島太郎のような感覚であった。 実際にそのような会社に訪れ、担当の方と何人もお話をすることによって、どんどんと外界の様子が分かってきて、自分のしたいこと、したくないこと、企業の求めることが明確になっていくのを感じた。履歴書や職務経歴書などのレジュメも、そのフィードバックにより徐々に改善した…はずだと思う。 マッチングの難しさ スカウトされたので面接に行くがマッチングしない、もしくは落選となる、ということはよくあった。（期待外れの人材でどうもすいません…） マッチングしない原因としては以下のようなことが考えられた。 活動初期は自分の求める転職先のイメージが不明瞭であったが故、希望する事業内容と異なった企業にも話を聞きに行ってしまっていた 期待されるポジションが自分の希望する内容ではなかったので、違うポジションを希望したが聞き入れられなかった 担当者と明らかにウマが合わなかった（高圧的な担当者だった） 企業側が期待するスキルと、僕のスキルセットが違っていた。なのになぜかスカウトされているという状況 企業側の想定年収と、こちらの希望年収が合わない。 面接落選となるケースの原因はというと。 登録プロフィールが不十分だった？（実際にお会いすると魅力を感じてもらえなかった様子） 活動初期は面接の要領が悪く、自己 PR が上手くできていなかった。スカウトされているが故、「選考されている立場」を自分がよく理解していなかった 技術試験に落選した（スキルセットのミスマッチ） ちなみに、こちらからお断りしたケースは以下のようなものがある。 求人サービスの説明に書いてあることと、実態が異なっていた 担当者が不誠実だった（当日約束の時間に現れなかった） 実際に話を聞いてみると、事業内容がとても不安定に感じられた 年収については年齢や人生のフェーズとも関連している。例えば今の僕が新卒社員並みの年収で働けるかというと、答えはもちろんNOだ。これは期待されるスキルや職務内容とももちろん絡み合っていて「その年収を希望するなら（その年齢なら）これくらいはスキルがないと」ということになる。 こういったミスマッチが生まれる原因の根本にはもちろん自分の至らなさがあるが、それを前提として別の原因の一つとして、採用担当者がプロフィールをよく見てくれていない、と感じることが多数あった。 求人サービス側で気軽にスカウトができるシステムになっているので仕方がない面もあるが、スカウトするからにはそれなりに責任を持ってしてほしいと思った次第。また paiza では、スカウトを辞退しても、また同じ会社からスカウトが届くことが何回かあった。辞退された人に再び送れるようになっているシステムも問題かと思った。 paiza ではサービス上でスキルチェック問題を解くことによって自分のランクが決定し、そのランクに合わせて企業からスカウトしてもらえる、という仕組み。僕はフロントエンドエンジニアなので Node.js で全ての問題を解いていた。だが、スカウトされる案件がほぼ PHP でのスカウトだった。確かに PHP の経験年数は登録しているけど…。それがウリじゃない、というところで勝負しなければならなかったという、なんというか不幸。 今時のWebサービスでは Node.js って需要なさそう、と思ってしまった。ちなみに求人の件数は Ruby on Rails エンジニアが一番という印象。猫も杓子も Ruby on Raild。ウーム…。 マッチングの話とはあまり関係ないが、スカウト後の面接で結果が出るまで1ヶ月くらい待たされて、結果は落選、というケースがあった。自分勝手で失礼な企業だと思った。すいません、これは愚痴だな。 技術試験について 数社では技術試験が課されたが、その内容の難しさに心を折られそうになる。 本当に優秀な人しか取りたくないのだ。企業側も真剣である。 ある1社のものは特定の日時にメールで課題が送られてきて、3時間後までに回答を返信せよ、というものだった。 論述問題を3問と、プログラミング問題2〜3問。ほぼサーバーサイドエンジニア向けの問題で、自分に馴染みのないものだったが…、技術問題は Node.js でどうにか回答。 案の定、力不足でこれは落選となった。 別のある1社のものはフレームワークごとプロジェクトファイルと SQL データが送られてきて、これこれこういうビジネスロジックを構築せよ、というものだった。 回答期限は一週間後くらいだったので、週末を使って問題を解く。自分がある程度知っている PHP フレームワークだったので、回答することはできたが…。SQL に明るくないという自分の弱点が浮き彫りになり、これも落選。 こちらの会社では落選の通知の際に、ダメなポイントを全てコメントして教えてくれた。なんと誠実な採点担当者だろうか。ありがとうございました。 それにしても「試験に落ちる」のはやっぱり凹むのである。 とはいえ自分の弱点が端的に理解できるし、企業が求めている人材は「こういうことができる人」ということもダイレクトに理解できた。なんとも学びの多い経験であった。 あとがき 結果的に求人サービスとは違った繋がりでご縁があり、転職先は決まった。（前のエントリーでご報告した通り） なぜここまで苦労する必要があったのか、とも思う。エージェントに相談に乗ってもらったり、知人のツテを頼るなど、他にいくらでもやり方はあったはず。 おそらく自分は転職という人生の転機を他人に委ねるのではなく、「自分にできること十分にやる、やった」という納得感が欲しかったのだろうと思う。また、転職活動を進めていくうちに、どんどん慣れて上手になっていくというか、自分が上達していくことが楽しさを感じていたということもある。面接にしても、レジュメ制作にしても、やればやるほど上手くできるようになる。 ただ、結果が出るかどうかはまた別の話であった。どんなに面接が上手くできても技術試験で落ちたり、事業内容が自分の希望と違ったり…、と色々あった。 転職とは最終的にはその企業や担当者とのご縁であると、そう締めくくりたい。]]></description>
										<content:encoded><![CDATA[<p>転職をした訳だが、想像以上に苦労したのでその旨、誰かの役に立つかもしれないと思って Web 上に記録しておきたい。</p>

<p>当方、Web 制作会社に9年間勤めたフロントエンドエンジニア兼テクニカルディレクターである。年齢は30代半ば。受託案件ではなく、自社サービスやプロダクトの開発がやりたくて転職を決意する。</p>

<p>2017年4月、退職を上司に宣言した上で転職活動を始めた。
6月に現職業務終了、7〜8月に有休消化して退職、8月中旬に新環境で就業、という予定を建てていた。</p>

<p>まずはエージェントなどに頼らず、自分自身の力で転職活動を経験してみたいと思ったので、求人サービスにプロフィール登録してみた。
結果的に <a href="https://www.wantedly.com/">Wantedly</a>、<a href="https://paiza.jp/">paiza</a>、<a href="https://www.pasonatech.co.jp/">pasonatech</a>、<a href="https://www.green-japan.com/">green</a> を利用。</p>

<ul>
<li>実働の割合的にはほぼ Wantedly 経由でのスカウトや応募だった。実働は会社訪問6件、面接2件</li>
<li>paiza はサーバーサイドの仕事が多くほぼ自分とマッチしなかったが、実働は面接4件</li>
<li>green は最低限のプロフィールだけ登録して一晩置いたら、匿名スカウトが何通も届いていたのでうんざりして使うのをやめた。よって実働なし。ロクにプロフィールを書いてもいないのに、スカウトをよこす人事って一体…。下手な鉄砲も数打ちゃ当たるという感じ？</li>
<li>pasonatech は10年前くらいに派遣社員をやっていたときにお世話になっていた派遣会社。サービス内の検索でヒットした求人に条件に合うものがほぼなかったので、応募はしなかった。よって実働なし</li>
</ul>

<h2>転職先の希望条件について</h2>

<p>転職先について、以下のような希望があった。</p>

<h3>事業面</h3>

<ul>
<li>自社サービスやプロダクトを活発に運営している</li>
<li>会社が目指すべき明瞭なビジョンがある</li>
<li>新規事業に対して積極的</li>
<li>娯楽事業（ゲーム、映画、音楽、ギャンブルなど）とマッチング事業は、やりがいを感じられそうにないので避けたい</li>
<li>デザイナーが社内にいる</li>
<li>極力制作を外注に出さない</li>
<li>正社員が30人以上いる</li>
</ul>

<h3>文化・生活面</h3>

<ul>
<li>スーツで出勤しなくていい</li>
<li>できれば朝早く出勤しなくていい</li>
<li>できればオフィスがダサくない</li>
<li>できればパーティーとか社員旅行とか煩わしいイベントが多くない</li>
</ul>

<h3>待遇面</h3>

<ul>
<li>年収が現在より下がらない</li>
<li>一般的な福利厚生がある</li>
</ul>

<hr />

<h2>活動概況</h2>

<p>Wantedly、paiza、green ではプロフィール登録すると、すぐに何件かスカウトメッセージをもらった。まずまずの手応えを感じつつ会社訪問に行く。</p>

<p>正直、転職先のイメージなんて曖昧なものでしかなかった。何せ9年間、同じ会社に勤めていたのだから。軽く浦島太郎のような感覚であった。
実際にそのような会社に訪れ、担当の方と何人もお話をすることによって、どんどんと外界の様子が分かってきて、自分のしたいこと、したくないこと、企業の求めることが明確になっていくのを感じた。履歴書や職務経歴書などのレジュメも、そのフィードバックにより徐々に改善した…はずだと思う。</p>

<h3>マッチングの難しさ</h3>

<p>スカウトされたので面接に行くがマッチングしない、もしくは落選となる、ということはよくあった。（期待外れの人材でどうもすいません…）</p>

<p>マッチングしない原因としては以下のようなことが考えられた。</p>

<ul>
<li>活動初期は自分の求める転職先のイメージが不明瞭であったが故、希望する事業内容と異なった企業にも話を聞きに行ってしまっていた</li>
<li>期待されるポジションが自分の希望する内容ではなかったので、違うポジションを希望したが聞き入れられなかった</li>
<li>担当者と明らかにウマが合わなかった（高圧的な担当者だった）</li>
<li>企業側が期待するスキルと、僕のスキルセットが違っていた。なのになぜかスカウトされているという状況</li>
<li>企業側の想定年収と、こちらの希望年収が合わない。</li>
</ul>

<p>面接落選となるケースの原因はというと。</p>

<ul>
<li>登録プロフィールが不十分だった？（実際にお会いすると魅力を感じてもらえなかった様子）</li>
<li>活動初期は面接の要領が悪く、自己 PR が上手くできていなかった。スカウトされているが故、「選考されている立場」を自分がよく理解していなかった</li>
<li>技術試験に落選した（スキルセットのミスマッチ）</li>
</ul>

<p>ちなみに、こちらからお断りしたケースは以下のようなものがある。</p>

<ul>
<li>求人サービスの説明に書いてあることと、実態が異なっていた</li>
<li>担当者が不誠実だった（当日約束の時間に現れなかった）</li>
<li>実際に話を聞いてみると、事業内容がとても不安定に感じられた</li>
</ul>

<p>年収については年齢や人生のフェーズとも関連している。例えば今の僕が新卒社員並みの年収で働けるかというと、答えはもちろんNOだ。これは期待されるスキルや職務内容とももちろん絡み合っていて「その年収を希望するなら（その年齢なら）これくらいはスキルがないと」ということになる。</p>

<p>こういったミスマッチが生まれる原因の根本にはもちろん自分の至らなさがあるが、それを前提として別の原因の一つとして、採用担当者がプロフィールをよく見てくれていない、と感じることが多数あった。</p>

<p>求人サービス側で気軽にスカウトができるシステムになっているので仕方がない面もあるが、スカウトするからにはそれなりに責任を持ってしてほしいと思った次第。また paiza では、スカウトを辞退しても、また同じ会社からスカウトが届くことが何回かあった。辞退された人に再び送れるようになっているシステムも問題かと思った。</p>

<p>paiza ではサービス上でスキルチェック問題を解くことによって自分のランクが決定し、そのランクに合わせて企業からスカウトしてもらえる、という仕組み。僕はフロントエンドエンジニアなので Node.js で全ての問題を解いていた。だが、スカウトされる案件がほぼ PHP でのスカウトだった。確かに PHP の経験年数は登録しているけど…。それがウリじゃない、というところで勝負しなければならなかったという、なんというか不幸。</p>

<p>今時のWebサービスでは Node.js って需要なさそう、と思ってしまった。ちなみに求人の件数は Ruby on Rails エンジニアが一番という印象。猫も杓子も Ruby on Raild。ウーム…。</p>

<p>マッチングの話とはあまり関係ないが、スカウト後の面接で結果が出るまで1ヶ月くらい待たされて、結果は落選、というケースがあった。自分勝手で失礼な企業だと思った。すいません、これは愚痴だな。</p>

<h3>技術試験について</h3>

<p>数社では技術試験が課されたが、その内容の難しさに心を折られそうになる。
本当に優秀な人しか取りたくないのだ。企業側も真剣である。</p>

<p>ある1社のものは特定の日時にメールで課題が送られてきて、3時間後までに回答を返信せよ、というものだった。
論述問題を3問と、プログラミング問題2〜3問。ほぼサーバーサイドエンジニア向けの問題で、自分に馴染みのないものだったが…、技術問題は Node.js でどうにか回答。
案の定、力不足でこれは落選となった。</p>

<p>別のある1社のものはフレームワークごとプロジェクトファイルと SQL データが送られてきて、これこれこういうビジネスロジックを構築せよ、というものだった。
回答期限は一週間後くらいだったので、週末を使って問題を解く。自分がある程度知っている PHP フレームワークだったので、回答することはできたが…。SQL に明るくないという自分の弱点が浮き彫りになり、これも落選。
こちらの会社では落選の通知の際に、ダメなポイントを全てコメントして教えてくれた。なんと誠実な採点担当者だろうか。ありがとうございました。</p>

<p>それにしても「試験に落ちる」のはやっぱり凹むのである。</p>

<p>とはいえ自分の弱点が端的に理解できるし、企業が求めている人材は「こういうことができる人」ということもダイレクトに理解できた。なんとも学びの多い経験であった。</p>

<hr />

<h2>あとがき</h2>

<p>結果的に求人サービスとは違った繋がりでご縁があり、転職先は決まった。（<a href="/2017/08/careerchange">前のエントリーでご報告した通り</a>）</p>

<p>なぜここまで苦労する必要があったのか、とも思う。エージェントに相談に乗ってもらったり、知人のツテを頼るなど、他にいくらでもやり方はあったはず。</p>

<p>おそらく自分は転職という人生の転機を他人に委ねるのではなく、「自分にできること十分にやる、やった」という納得感が欲しかったのだろうと思う。また、転職活動を進めていくうちに、どんどん慣れて上手になっていくというか、自分が上達していくことが楽しさを感じていたということもある。面接にしても、レジュメ制作にしても、やればやるほど上手くできるようになる。</p>

<p>ただ、結果が出るかどうかはまた別の話であった。どんなに面接が上手くできても技術試験で落ちたり、事業内容が自分の希望と違ったり…、と色々あった。</p>

<p>転職とは最終的にはその企業や担当者とのご縁であると、そう締めくくりたい。</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
