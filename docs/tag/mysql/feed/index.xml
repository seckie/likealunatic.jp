<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>MySQL &#8211; Like@Lunatic</title>
	<atom:link href="/tag/mysql/feed" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Naoki Sekiguchi&#039;s personal Web site.</description>
	<lastBuildDate>Wed, 01 Jan 2025 10:17:05 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.5</generator>

<image>
	<url>/wp-content/uploads/2021/01/cropped-og-32x32.png</url>
	<title>MySQL &#8211; Like@Lunatic</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>WinXPローカルでXAMPPを使ってMovable Typeを動かす―2010年3月版 その2</title>
		<link>/2010/03/xampp_and_mt_2</link>
					<comments>/2010/03/xampp_and_mt_2#comments</comments>
		
		<dc:creator><![CDATA[seckie]]></dc:creator>
		<pubDate>Tue, 09 Mar 2010 15:31:34 +0000</pubDate>
				<category><![CDATA[Software]]></category>
		<category><![CDATA[MovableType]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[Perl]]></category>
		<category><![CDATA[XAMPP]]></category>
		<guid isPermaLink="false">/?p=528</guid>

					<description><![CDATA[3年くらい前に書いたXAMPPとMTの記事に今でもアクセスがそこそこあるので、古い内容を見ていただいてもなぁ・・・と思い、最新の情報で記事を書き直すことにしました。2010年3月7日時点の情報となります。全3記事で、今回第2弾は「ActivePerlのインストールと設定、MySQLの設定」です。 <a href="/2010/03/xampp_and_mt_2">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>前回に引き続き、XAMPPでMovable Typeを動作させるチュートリアルの第2弾です。</p>

<ol>
<li><a href="/2010/03/xampp_and_mt_1.php">XAMPPのインストール、Apacheの設定</a></li>
<li><em>ActivePerlのインストールと設定、MySQLの設定</em></li>
<li><a href="/2010/03/xampp_and_mt_3.php">ImageMagickのインストール、Movable Typeのインストール</a></li>
</ol>

<p>今回はActivePerlのインストールと設定、MySQLの設定を行います。</p>

<ol>
<li class="step01">
<p><a href="http://www.activestate.com/activeperl/">ActivePerl のダウンロードページ</a>にアクセスし「ActivePerl DOWNLOAD NOW」をクリックして次のページに進みましょう。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_51.jpg"><img decoding="async" src="/wp-content/uploads/2010/03/20100310_51-150x150.jpg" alt="ActivePerlのダウンロードページ" title="20100310_51" width="150" height="150" class="alignnone size-thumbnail wp-image-560" /></a></p>
</li>

<li class="step02">
<p>プラットフォーム別のダウンロードファイルの一覧が表示されます。一番上の<q>Recommended version(s) for your platform</q>にリストアップされている ActivePerl 5.10.1.1007 for Windows (x86) をダウンロードします。<br />
<span class="memo">お使いのWindowsが64bit版である場合、ActivePerl 5.10.1.1007 for Windows (64-bit, x64) を選択します。</span></p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_52.jpg"><img decoding="async" src="/wp-content/uploads/2010/03/20100310_52-150x150.jpg" alt="ActivePerlのダウンロードページ" title="20100310_52" width="150" height="150" class="alignnone size-thumbnail wp-image-561" /></a></p>
</li>

<li class="step03">
<p>ダウンロードしたインストーラを実行しましょう。インストールウィザードが開始されます。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_53.jpg"><img decoding="async" src="/wp-content/uploads/2010/03/20100310_53-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_53" width="150" height="150" class="alignnone size-thumbnail wp-image-562" /></a></p>
</li>

<li class="step04">
<p>ライセンス規約に同意（<q>I accept the terms in the License Agreement</q>）を選択し、「Next」をクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_54.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_54-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_54" width="150" height="150" class="alignnone size-thumbnail wp-image-563" /></a></p>
</li>

<li class="step05">
<p>インストールするプログラムと、インストールするディレクトリを設定します。インストールするディレクトリはデフォルトで <span class="path">C:\Perl\</span> になっていますが、これを <span class="path">C:\usr\</span> に変更します。「Browser」をクリック。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_55.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_55-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_55" width="150" height="150" class="alignnone size-thumbnail wp-image-564" /></a></p>
</li>

<li class="step06">
<p>ディレクトリの選択画面となるので、「Folder name:」の欄に <span class="path">C:\usr\</span> と入力し、「OK」をクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_56.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_56-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_56" width="150" height="150" class="alignnone size-thumbnail wp-image-565" /></a></p>
</li>

<li class="step07">
<p>「Location:」に <span class="path">C:\urs\</span> が正しく設定されたかを確認し、「Next」をクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_57.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_57-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_57" width="150" height="150" class="alignnone size-thumbnail wp-image-566" /></a></p>
</li>

<li class="step08">
<p>オプションを選択する画面になります。特に変更せず「Next」をクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_58.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_58-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_58" width="150" height="150" class="alignnone size-thumbnail wp-image-567" /></a></p>
</li>

<li class="step09">
<p>これで設定は終わりです。「Install」をクリックしてしばらく待ちます。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_59.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_59-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_59" width="150" height="150" class="alignnone size-thumbnail wp-image-570" /></a></p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_60.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_60-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_60" width="150" height="150" class="alignnone size-thumbnail wp-image-571" /></a></p>
</li>

<li class="step10">
<p>インストールが完了したら、「Finish」をクリックしてインストールウィザードを完了します。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_61.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_61-150x150.jpg" alt="ActivePerlのインストールウィザード" title="20100310_61" width="150" height="150" class="alignnone size-thumbnail wp-image-572" /></a></p>
</li>

<li class="step11">
<p>さて、<a href="/2010/03/xampp_and_mt_1.php">前回の記事</a>の環境の通り、<span class="path">D:\htdocs\site1</span> というディレクトリを <span class="url">http://site1.localhost/</span> というローカルホストドメインで参照できるようにし、ここで開発を行うことを前提に話を進めましょう。</p>
<p>サイトのルートディレクトリ（<span class="path">D:\htdocs\site1</span>）に Movable Type（ここではMTOS 5.01） のファイルを展開し、<span class="path">mtos</span> というディレクトリ名をつけます。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_134.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_134-150x150.jpg" alt="MTOSのファイルを展開" title="20100310_134" width="150" height="150" class="alignnone size-thumbnail wp-image-569" /></a></p>
</li>

<li class="step12">
<p>念のため、インストールしたPerlが正しく動作するか確認してみます。テキストエディタを開いて以下のコードを記述し、<span class="path">C:\test.pl</span> というパスで保存します。（あくまで例です。実際はどんなパスでもOKです）</p>
<pre><code>#! /usr/bin/perl
print(&quot;It works!\n&quot;);</code></pre>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_66.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_66-150x150.jpg" alt="Perlのテストプログラムを作成する" title="20100310_66" width="150" height="150" class="alignnone size-thumbnail wp-image-575" /></a></p>
<p>これをコマンドプロンプト（<a href="#footnote_20100308_1">※1</a>）で以下のように入力し、Enterキーを押して実行します。</p>
<pre><code>perl c:\test.pl</code></pre>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_63.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_63-150x150.jpg" alt="Perlのテストプログラムをコマンドプロンプトから実行してみる" title="20100310_63" width="150" height="150" class="alignnone size-thumbnail wp-image-573" /></a></p>
<p>入力の次の行に <q>It works!</q> と表示されれば正しく実行できたということです。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_65.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_65-150x150.jpg" alt="Perlのテストプログラムをコマンドプロンプトから実行してみる" title="20100310_65" width="150" height="150" class="alignnone size-thumbnail wp-image-574" /></a></p>
<p>ここまでくればMovable TypeのCGIプログラムをひとまず表示はできる環境になっています。（<a href="#footnote_20100308_2">※2</a>）</p>
</li>

<li class="step13">
<p><span class="url">http://site1.localhost/mtos/mt-check.cgi</span> にブラウザからアクセスします。ここまでの作業が正しくできていれば、MTのシステムチェック画面が表示されるはずです。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_80.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_80-150x150.jpg" alt="mt-check.cgiでのシステムチェック結果" title="20100310_80" width="150" height="150" class="alignnone size-thumbnail wp-image-576" /></a></p>
</li>

<li class="step14">
<p>この時点では <q>Movable Typeの構成ファイルが見つかりませんでした。</q> というメッセージが表示され、まだMovable Typeが正しく動作しないことが分かります。ページをスクロールしていくと、DBD::mysql というPerlモジュールがシステムにインストールされていないことが分かります。これは MySQL データベースを使用するために必要となるモジュールです。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_81.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_81-150x150.jpg" alt="mt-check.cgiでのシステムチェック結果" title="20100310_81" width="150" height="150" class="alignnone size-thumbnail wp-image-568" /></a></p>
</li>

<li class="step15">
<p>では DBD::mysql モジュールをインストールしましょう。コマンドプロンプトを起動し、<kbd>ppm</kbd> と入力しEnterキーを押します。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_84.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_84-150x150.jpg" alt="コマンドプロンプトでppmを起動する" title="20100310_84" width="150" height="150" class="alignnone size-thumbnail wp-image-578" /></a></p>
</li>

<li class="step16">
<p>すると「Perl Package Manager（略称PPM）」が起動します。<q>Synchronizing Database&#8230;（データベースと同期中）</q> とステータス表示されてしばらく固まるので、じっと待ちます。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_85.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_85-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_85" width="150" height="150" class="alignnone size-thumbnail wp-image-579" /></a></p>
</li>

<li class="step17">
<p>同期が完了して操作できるようになったら、画面左上の「View all packages」アイコンをクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_87.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_87-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_87" width="150" height="150" class="alignnone size-thumbnail wp-image-580" /></a></p>
</li>

<li class="step18">
<p>そして画面上部の検索エリアに <kbd>dbd-mysql</kbd> と入力しましょう。すると中央のモジュール一覧に DBD-mysql と表示されるはずです。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_88.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_88-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_88" width="150" height="150" class="alignnone size-thumbnail wp-image-581" /></a></p>
</li>

<li class="step19">
<p>リストアップされた DBD-mysql を右クリックし「Install DBD-mysql 4.011 + 」を選択します。これでインストールするモジュールの一覧に登録されます。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_89.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_89-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_89" width="150" height="150" class="alignnone size-thumbnail wp-image-582" /></a></p>
</li>

<li class="step20">
<p>画面右上の「→（Run marked actions）」アイコンをクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_90.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_90-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_90" width="150" height="150" class="alignnone size-thumbnail wp-image-589" /></a></p>
<p>すると <q>Ready to install 1 package?</q> とアラート表示されるので「OK」をクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_91.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_91-150x121.jpg" alt="GUI ppmでインストールの確認アラート" title="20100310_91" width="150" height="121" class="alignnone size-thumbnail wp-image-583" /></a></p>
</li>

<li class="step21">
<p>しばらく待つと、DBD::mysqlモジュールのインストールが完了します。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_92.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_92-150x150.jpg" alt="GUI ppmの操作画面" title="20100310_92" width="150" height="150" class="alignnone size-thumbnail wp-image-584" /></a></p>
</li>

<li class="step22">
<p>もう一度ブラウザで mt-check.cgi にアクセスしてみましょう。<q>サーバーにDBD::mysqlがインストールされています</q> と表示され、エラー表示になっていなければOKです。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_93.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_93-150x150.jpg" alt="mt-check.cgiでのシステムチェック結果" title="20100310_93" width="150" height="150" class="alignnone size-thumbnail wp-image-585" /></a></p>
</li>

<li class="step23">
<p>では今度はMySQLの設定を行っていきます。今回インストールするMTOS用のデータベースを作成しましょう。まずXAMPPコントロールパネルでMySQLが「Running」状態になっていることを確認し、「Admin」ボタンをクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_68.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_68-150x150.jpg" alt="XAMPPコントロールパネル" title="20100310_68" width="150" height="150" class="alignnone size-thumbnail wp-image-577" /></a></p>
</li>

<li class="step24">
<p>するとブラウザでphpMyAdmin（MySQLデータベースをブラウザから操作できるツール）が開きます。「言語 &#8211; Language」に「日本語 &#8211; Japanese」が設定されていることを確認し、ユーザ名、パスワードを入力してログインしましょう。ここでのユーザ名は <kbd>root</kbd> 、<a href="/2010/03/xampp_and_mt_1.php#20100307_s16">パスワードは前回の記事のStep16</a>でXAMPPの管理画面から設定したパスワードになります。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_71.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_71-150x150.jpg" alt="phpMyAdminのログイン画面" title="20100310_71" width="150" height="150" class="alignnone size-thumbnail wp-image-587" /></a></p>
</li>

<li class="step25">
<p>phpMyAdminにログインすると、様々なメニューが並んだ画面が表示されます。ページ中ほどにある「新規データベースを作成する」という入力フォームから、今回使用するデータベースを作成しましょう。</p>
<p>左のフィールドにはデータベース名を入力し（今回は「<kbd>mtos5</kbd>」とします）、隣のプルダウンメニューでデータベースの文字コードを選択します。ここでは「<strong>utf8_general_ci</strong>」を選択してください。このプルダウンメニューが結構長いのですが、一番下の方にあります。そして「作成」ボタンをクリックします。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_74.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_74-150x150.jpg" alt="phpMyAdminの操作画面" title="20100310_74" width="150" height="150" class="alignnone size-thumbnail wp-image-588" /></a></p>
</li>

<li class="step26">
<p><q>データベース mtos5 を作成しました。</q>　と表示されたら完了です。</p>
<p class="pic"><a href="/wp-content/uploads/2010/03/20100310_75.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/03/20100310_75-150x150.jpg" alt="phpMyAdminの操作画面" title="20100310_75" width="150" height="150" class="alignnone size-thumbnail wp-image-586" /></a></p>
</li>
</ol>

<p>以上でActivePerlのインストールと設定、MySQLの設定までが完了し、今回の記事はここまでです。次回はImage Magickのインストール、そしていよいよMovable Typeのインストールを取り上げます。</p>

<div class="postscript">
<ul class="footnote">

<li><a name="footnote_20100308_1" id="footnote_20100308_1">※1</a> コマンドプロンプトは、スタートアップメニューから「ファイル名を指定して実行」（もしくは「Windowsキー + r」）で <kbd>cmd</kbd> と入力してEnterキーを入力すると起動することができます。</li>
<li><a name="footnote_20100308_2" id="footnote_20100308_2">※2</a> Movable Type を含む、Perl言語で書かれた大抵のCGIプログラムはデフォルトでPerlを <span class="path">/usr/bin/perl</span> というパスで参照するように書かれています。（ファイルの冒頭にPerlのパスが記述されています）Step5～7でActivePerlを <span class="path">C:\usr\</span> というパスを指定してインストールしたことにより、Perl が <span class="path">/usr/bin/perl</span> で参照できるようになります。</li>
</ul>
</div>
]]></content:encoded>
					
					<wfw:commentRss>/2010/03/xampp_and_mt_2/feed</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>MySQL4.0→5.1へ移行</title>
		<link>/2010/01/mysql45</link>
		
		<dc:creator><![CDATA[seckie]]></dc:creator>
		<pubDate>Wed, 20 Jan 2010 12:47:36 +0000</pubDate>
				<category><![CDATA[Web Development]]></category>
		<category><![CDATA[MySQL]]></category>
		<guid isPermaLink="false">/?p=349</guid>

					<description><![CDATA[MySQL4.0からMySQL5.1へ移行を行った際のメモ <a href="/2010/01/mysql45">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>MTOSからWordPressに年末に乗り換えたばかりなのですが、その際、MySQLのバージョンアップを行わなければなりませんでした。
WordPress 2.9の推奨環境がMySQL 4.1.2以上となった一方、使っていたDBはMySQL4.0だったからです。</p>

<p>ここのサーバーはさくらのレンタルサーバ（スタンダードプラン）なのですが、ここではデータベースが1つしか作成できません。
・・・ということで使用中のデータベースを削除し、新しくデータベースを作成するしかありませんでした。</p>

<p>しかし一旦削除する、というのはなかなか勇気が要ります。なんせミスしたら復旧できませんからね。。<br />
とりあえず念には念をってことで以下のように作業しました。WordPressに移行する前だったので、データベースにはMTOSのデータが入っている状態でした。</p>

<ol>
<li>現状使用しているMTOSの機能でバックアップを作成（一応、保険的な感じで・・・）</li>
<li>レンタルサーバのコントロールパネルからphpMyAdminを使い、データベースのエクスポートを行ってバックアップファイルを作成</li>
<li>ローカル環境（XAMPP）のMySQL5.1に(2)でエクスポートしたファイルをインポートし、問題なくインポートできるか確認</li>
<li>(3)で問題がないことを確認できたら、レンタルサーバのコントロールパネルから現データベースを削除</li>
<li>データベース削除を行うと「データベースを作成」みたいなボタンが現れるので、データベースをMySQL5.1で作成</li>
<li>作成したデータベースのphpMyAdminから、(2)で作成したファイルをインポート</li>
<li>MTOSの mt-config.cgi の内容を新データベースに合わせて修正</li>
<li>MTOSにログインして問題がないか確認</li>
</ol>

<p>これらの作業の中で特筆すべきポイントはデータのエクスポート、インポートのところですね。文字コードが一緒でないと、日本語部分が文字化けしてしまいます。<br />
まず、phpMyAdminにログインする際に「日本語 &#8211; Japanese (utf-8)」を選択しましょう。</p>

<p class="pic"><a href="/wp-content/uploads/2010/01/sakura_pma.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/01/sakura_pma-197x300.jpg" alt="ｐｈｐMyAdminへのログイン" width="197" height="300" class="alignnone size-medium wp-image-409" srcset="/wp-content/uploads/2010/01/sakura_pma-197x300.jpg 197w, /wp-content/uploads/2010/01/sakura_pma.jpg 440w" sizes="(max-width: 197px) 100vw, 197px" /></a>
<span class="cap">サーバーによっては「日本語 &#8211; Japanese」としか表示されない場合もありますが、問題ありません。さくらのレンタルサーバではこれでした。</span>
</p>

<p>それと、ログイン後の画面の「MySQL の接続照合順序:」でインポート側とエクスポート側で同じものを選択します。「utf8_general_ci」か「utf8_unicode_ci」あたりかと思います。</p>

<p class="pic"><a href="/wp-content/uploads/2010/01/sakura_pma_enc.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/01/sakura_pma_enc-300x274.jpg" alt="phpMyAdminログイン後の画面" width="300" height="274" class="alignnone size-medium wp-image-410" srcset="/wp-content/uploads/2010/01/sakura_pma_enc-300x274.jpg 300w, /wp-content/uploads/2010/01/sakura_pma_enc.jpg 470w" sizes="(max-width: 300px) 100vw, 300px" /></a>
</p>

<p>左フレームから該当データベースを選択し、右上メニューの「エクスポート」をクリック。</p>

<p class="pic"><a href="/wp-content/uploads/2010/01/sakura_pma_exp.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/01/sakura_pma_exp-300x184.jpg" alt="phpMyAdmin データのエクスポート" title="phpMyAdmin データのエクスポート" width="300" height="184" class="alignnone size-medium wp-image-412" srcset="/wp-content/uploads/2010/01/sakura_pma_exp-300x184.jpg 300w, /wp-content/uploads/2010/01/sakura_pma_exp.jpg 980w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>

<p>エクスポートの際は「ファイルに保存」するにチェックを入れる以外の設定はとりあえずそのままで。</p>

<p class="pic"><a href="/wp-content/uploads/2010/01/sakura_pma_exp2.jpg"><img loading="lazy" decoding="async" src="/wp-content/uploads/2010/01/sakura_pma_exp2-300x283.jpg" alt="phpMyAdmin テーブルのエクスポート" title="phpMyAdmin テーブルのエクスポート" width="300" height="283" class="alignnone size-medium wp-image-411" srcset="/wp-content/uploads/2010/01/sakura_pma_exp2-300x283.jpg 300w, /wp-content/uploads/2010/01/sakura_pma_exp2.jpg 874w" sizes="(max-width: 300px) 100vw, 300px" /></a>
</p>

<p>エクスポートされた *.sql ファイルをエディタで開いてみて、文字コードがUTF-8になっているか、日本語のデータが文字化けしていないかを念のため確認。インポート時には「ファイルの文字セット」で「utf8」を選択しましょう。</p>

<p>MTみたいに静的なファイルを書き出すCMSだと、データベースを削除してもファイルは残るのでサイトには影響がないですが、動的生成のCMSの場合はデータベース削除はNGですね。サイトが見えなくなっちゃいますので。どうしても削除する場合、作業中には「現在メンテナンス中」的な画面を代わりに表示させるとか、そういった対応が必要なのかなと。</p>

<div class="postscript">
  <h3>追記 <span>&#8211; 2010-01-22</span></h3>
  <p>ドンピシャな内容の記事を発見したので、リンクをさせていただきます。コチラ様の方がずっと丁寧！<br />
<a href="http://bamboostudio.tank.jp/archives/1692">さくらインターネットのレンタルサーバで WordPress 2.9 へアップグレードできない方へ &#8211; Bamboo Studio ＊ バンブースタジオ | Blog&#8482;</a></p>
  <h3>追記 <span>&#8211; 2010-01-25</span></h3>
  <p>さらに、本文中の「～」（全角チルダ）が「?」に文字化けしてしまう問題について。解決法について詳細な記事を発見。<br />
  <a href="http://www.koikikukan.com/archives/2009/10/16-015555.php">小粋空間: Movable Type で「～」が「?」に文字化けする事象や日本語のタグが合算できない不具合を解消する</a><br />
  すでに作られてしまったテーブルについては、phpMyAdminにおいて<br />
  <q cite="http://www.koikikukan.com/archives/2009/10/16-015555.php">該当テーブルを選択 → 「構造」メニュー → 「すべてチェックする」 → その右のエンピツマークのアイコンをクリックして「編集」モードに → 「照合順序」に指定のあるものについては「utf8_general_ci」に変更 → 「保存する」</q><br />
  これを全てのテーブルで行うとそれ以降、「～」が文字化けしなくなります。</p>
  <p>また、こんなプラグインも見つけました。<br />
  <a href="http://wppluginsj.sourceforge.jp/force-wave-dash/">WordPress Plugins/JSeries   &raquo; Force Wave Dash (波ダッシュ矯正)</a><br />
  記事を保存する際に「～」（全角チルダ）を「〜」（波ダッシュ）に強制的に変換してくれるプラグインです。</p>
</div>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
